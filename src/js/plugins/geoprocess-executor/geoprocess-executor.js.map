{"version":3,"sources":["webpack://GeoserviceFactory/./node_modules/reflect-metadata/Reflect.js","webpack://GeoserviceFactory/webpack/bootstrap","webpack://GeoserviceFactory/webpack/runtime/define property getters","webpack://GeoserviceFactory/webpack/runtime/global","webpack://GeoserviceFactory/webpack/runtime/hasOwnProperty shorthand","webpack://GeoserviceFactory/webpack/runtime/make namespace object","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/types/lifecycle.js","webpack://GeoserviceFactory/./node_modules/tsyringe/node_modules/tslib/tslib.es6.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/class-provider.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/factory-provider.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/lazy-helpers.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/injection-token.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/token-provider.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/value-provider.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/registry-base.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/registry.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/resolution-context.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/interceptors.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/dependency-container.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/providers/provider.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/error-helpers.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/reflection-helpers.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/decorators/inject.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/decorators/injectable.js","webpack://GeoserviceFactory/./node_modules/tsyringe/dist/esm5/index.js","webpack://GeoserviceFactory/./src/Shared/domain/NumberValueObject.ts","webpack://GeoserviceFactory/./src/Shared/domain/Equidistance.ts","webpack://GeoserviceFactory/./src/Shared/domain/Latitude.ts","webpack://GeoserviceFactory/./src/Shared/domain/StringValueObject.ts","webpack://GeoserviceFactory/./src/Shared/domain/LayerFullname.ts","webpack://GeoserviceFactory/./src/Shared/domain/Longitude.ts","webpack://GeoserviceFactory/./src/Shared/domain/Point.ts","webpack://GeoserviceFactory/./src/Shared/domain/Polygon.ts","webpack://GeoserviceFactory/./src/Shared/domain/WPSEndpoint.ts","webpack://GeoserviceFactory/./src/Shared/infrastructure/PostmanHTTP.ts","webpack://GeoserviceFactory/./src/Contour/domain/Contour.ts","webpack://GeoserviceFactory/./src/Contour/domain/ContourV2.ts","webpack://GeoserviceFactory/./node_modules/@turf/helpers/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/meta/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/area/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/bbox/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/invariant/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/boolean-point-on-line/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/boolean-contains/dist/es/index.js","webpack://GeoserviceFactory/./src/Contour/infraestructure/ContourTurfJSToleranceChecker.ts","webpack://GeoserviceFactory/./src/Contour/application/ContourService.ts","webpack://GeoserviceFactory/./src/Contour/application/ContourHandler.ts","webpack://GeoserviceFactory/./src/ElevationOfPoint/domain/ElevationOfPoint.ts","webpack://GeoserviceFactory/./node_modules/@turf/distance/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/length/dist/es/index.js","webpack://GeoserviceFactory/./src/ElevationOfPoint/infraestructure/TurfJSElevationOfPointToleranceChecker.ts","webpack://GeoserviceFactory/./src/ElevationOfPoint/application/ElevationOfPointResponseType.ts","webpack://GeoserviceFactory/./src/ElevationOfPoint/application/ElevationOfPointService.ts","webpack://GeoserviceFactory/./src/ElevationOfPoint/application/ElevationOfPointHandler.ts","webpack://GeoserviceFactory/./src/Shared/domain/Line.ts","webpack://GeoserviceFactory/./node_modules/@turf/bearing/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/destination/dist/es/index.js","webpack://GeoserviceFactory/./node_modules/@turf/along/dist/es/index.js","webpack://GeoserviceFactory/./src/Shared/domain/MultiPointInLine.ts","webpack://GeoserviceFactory/./src/Shared/domain/PointInLine.ts","webpack://GeoserviceFactory/./src/Shared/infrastructure/TurfJSLineToPointsInterval.ts","webpack://GeoserviceFactory/./src/ElevationProfile/domain/ElevationProfile.ts","webpack://GeoserviceFactory/./src/ElevationProfile/infraestructure/TurfJSElevationProfileToleranceChecker.ts","webpack://GeoserviceFactory/./src/ElevationProfile/application/ElevationProfileResponseType.ts","webpack://GeoserviceFactory/./src/Shared/domain/Height.ts","webpack://GeoserviceFactory/./src/Shared/domain/Point3D.ts","webpack://GeoserviceFactory/./src/Shared/domain/Line3D.ts","webpack://GeoserviceFactory/./src/ElevationProfile/application/ElevationProfileService.ts","webpack://GeoserviceFactory/./src/ElevationProfile/application/ElevationProfileHandler.ts","webpack://GeoserviceFactory/./src/ElevationProfileGetFeatureInfo/domain/ElevationProfile.ts","webpack://GeoserviceFactory/./src/ElevationProfileGetFeatureInfo/infraestructure/TurfJSElevationProfileToleranceChecker.ts","webpack://GeoserviceFactory/./src/ElevationProfileGetFeatureInfo/application/ElevationProfileResponseType.ts","webpack://GeoserviceFactory/./src/ElevationProfileGetFeatureInfo/application/ElevationProfileService.ts","webpack://GeoserviceFactory/./src/ElevationProfileGetFeatureInfo/application/ElevationProfileGetFeatureInfoHandler.ts","webpack://GeoserviceFactory/./src/HealthCheck/application/HealthCheck.ts","webpack://GeoserviceFactory/./src/Shared/domain/Level.ts","webpack://GeoserviceFactory/./src/WaterRise/domain/TIFFWaterRiseXMLGenerator.ts","webpack://GeoserviceFactory/./src/WaterRise/domain/PNGWaterRiseXMLGenerator.ts","webpack://GeoserviceFactory/./src/WaterRise/domain/WaterRise.ts","webpack://GeoserviceFactory/./src/WaterRise/infraestructure/WaterRiseTurfJSToleranceChecker.ts","webpack://GeoserviceFactory/./src/WaterRise/application/WaterRiseService.ts","webpack://GeoserviceFactory/./src/WaterRise/application/WaterRiseHandler.ts"],"names":["Reflect","factory","root","g","self","this","Function","exporter","makeExporter","target","previous","key","value","Object","defineProperty","configurable","writable","hasOwn","prototype","hasOwnProperty","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","Array","downLevel","HashMap","MakeDictionary","has","map","call","get","undefined","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","keys","values","selector","_index","_keys","_values","_selector","next","index","length","result","done","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","set","delete","size","i","clear","getKey","getValue","getEntry","insert","indexOf","push","_","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","data","Uint8Array","crypto","getRandomValues","msCrypto","offset","byte","toString","toLowerCase","CreateWeakMapPolyfill","GetOrCreateMetadataMap","O","P","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasMetadata","MetadataKey","OrdinaryHasOwnMetadata","parent","OrdinaryGetPrototypeOf","IsNull","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryMetadataKeys","ownKeys","OrdinaryOwnMetadataKeys","parentKeys","_i","ownKeys_1","_a","parentKeys_1","obj","method","GetMethod","IsCallable","TypeError","IsObject","GetIterator","k","IteratorStep","nextValue","e","IteratorClose","Type","x","ToPrimitive","input","PreferredType","hint","exoticToPrim","toString_1","valueOf","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","isArray","IsConstructor","V","func","f","proto","prototypeProto","constructor","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","globalThis","window","prop","r","toStringTag","Lifecycle","extendStatics","b","setPrototypeOf","p","__values","s","m","__read","n","ar","arguments","concat","isClassProvider","provider","useClass","isFactoryProvider","useFactory","DelayedConstructor","wrap","reflectMethods","createProxy","createObject","_this","init","Proxy","createHandler","delayedObject","handler","forEach","name","args","apply","isNormalToken","token","isTokenProvider","useToken","isValueProvider","useValue","RegistryBase","_registryMap","getAll","ensure","setAll","Registry","_super","scopedResolutions","PreResolutionInterceptors","PostResolutionInterceptors","preResolution","postResolution","typeInfo","InternalDependencyContainer","_registry","interceptors","register","providerOrConstructor","options","lifecycle","isProvider","path","tokenProvider","currentToken","includes","Error","join","registration","registerType","from","to","registerInstance","instance","registerSingleton","resolve","context","getRegistration","executePreResolutionInterceptor","resolveRegistration","executePostResolutionInterceptor","isConstructorToken","construct","resolutionType","e_1","remainingInterceptors","_b","_c","interceptor","frequency","callback","e_1_1","e_2","e_2_1","resolved","isSingleton","isContainerScoped","returnInstance","resolveAll","registrations","getAllRegistrations","result_1","item","isRegistered","recursive","reset","clearInstances","e_3","_d","filter","e_3_1","createChildContainer","e_4","childContainer","some","e_4_1","beforeResolution","afterResolution","ctor","paramInfo","params","resolveParams","bind","param","idx","multiple","transform","transformArgs","paramIdx","msg","indent","match","split","trim","message","l","INJECTION_TOKEN_METADATA_KEY","_propertyKey","parameterIndex","descriptors","getOwnMetadata","defineMetadata","getMetadata","injectionTokens","NumberValueObject","_value","ensureIsValidValue","isNaN","RangeError","Equidistance","longitude","super","ensureIsValidEquidistance","Latitude","ensureIsValidLatitude","StringValueObject","LayerFullname","layerFullname","Longitude","ensureIsValidLongitude","Point","latitude","_longitude","_latitude","toProcessString","static","stringPoint","arrayPoint","parseFloat","moveLongitude","moveLatitude","Polygon","points","stringPolygon","replace","point","coordinates","jsonString","JSON","parse","features","geometry","wpsEndpoint","thisArg","_arguments","generator","Promise","reject","fulfilled","step","rejected","then","PostmanHTTP","post","url","content","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","body","json","postReturningBlob","blob","Contour","longitudeLower","latitudeLower","longitudeUpper","latitudeUpper","equidistance","mdeLayerFullname","_longitudeLower","_latitudeLower","_longitudeUpper","_latitudeUpper","_equidistance","_wpsEndpoint","_mdeLayerFullname","fullWpsEndpoint","xmlInput","MAX_AREA_ALLOWED","MIN_VALLEY_EQUIDISTANCE_ALLOWED","MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED","FIELDS","ContourV2","polygon","_polygon","_baseRasterLayer","rectangle","earthRadius","factors","centimeters","centimetres","degrees","feet","inches","kilometers","kilometres","meters","metres","miles","millimeters","millimetres","nauticalmiles","radians","yards","feature","geom","properties","feat","type","id","bbox","coordinates_1","ring","j","radiansToDegrees","PI","degreesToRadians","num","coordEach","geojson","excludeWrapCoord","stopG","coords","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","featureProperties","featureBBox","featureId","segmentReduce","initialValue","previousValue","started","coordinate","flattenEach","feature$$1","segmentIndex","previousCoords","previousFeatureIndex","previousMultiIndex","prevGeomIndex","currentCoord","featureIndexCoord","multiPartIndexCoord","currentSegment","segmentEach","RADIUS","currentGeometry","total","polygonArea","calculateArea","geomReduce","abs","ringArea","p1","p2","lowerIndex","middleIndex","upperIndex","coordsLength","rad","sin","Infinity","coord","getCoord","getGeom","booleanPointInPolygon","pt","polys","inBBox","insidePoly","inRing","ignoreBoundary","inHole","isInside","slice","xi","yi","xj","yj","isPointOnLineSegment","lineSegmentStart","lineSegmentEnd","excludeBoundary","epsilon","y","x1","y1","x2","y2","dxl","dyl","cross","line","ptCoords","lineCoords","getCoords","ignoreEndVertices","booleanContains","feature1","feature2","geom1","geom2","type1","type2","coords1","coords2","compareCoords","multiPoint","output","isPointInMultiPoint","multiPoint1","multiPoint2","coord2","matchFound","isMultiPointInMultiPoint","lineString1","lineString2","haveFoundInteriorPoint","isLineOnLine","lineString","isMultiPointOnLine","linestring","pair1","pair2","doBBoxOverlap","isLineInPoly","coords_1","ring_1","isPolyInPoly","isMultiPointInPoly","bbox1","bbox2","ContourTurfJSToleranceChecker","ensureInputDataIsInTolerance","contour","inputPolygon","pointsToPolygon","ensureInputDataIsInToleranceV2","pointsToPolygonV2","desc","c","getOwnPropertyDescriptor","decorate","paramIndex","ContourService","postman","toleranceChecker","tolaranceChecker","getFields","execute","executeV2","ContourHandler","host","service","createFromString","ElevationOfPoint","_point","mdeLayerShortname","MAX_LENGHT_ALLOWED","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","cos","units","factor","radiansToLength","atan2","sqrt","segment","TurfJSElevationOfPointToleranceChecker","elevationOfPoint","ElevationOfPointResponseType","ElevationOfPointService","responseType","postmanResponse","formatResponse","postmanResponseToPoint3D","point2D","postmanResponseToFeatureCollection","FeatureCollectionOfPoint","ElevationOfPointHandler","Point3D","Line","stringLine","subLine","maxIndex","actualIndex","bearing","start","end","final","bear","calculateFinalBearing","lon1","lon2","destination","origin","distance","longitude1","latitude1","bearingRad","lengthToRadians","latitude2","asin","along","travelled","overshot","direction","MultiPointInLine","_points","reorderPointsByPositionInLine","sort","firstPoint","secondPoint","positionInLine","pointsString","toJSONFeatureCollection","PointInLine","_positionInLine","TurfJSLineToPointsInterval_1","TurfJSLineToPointsInterval","lineFeature","lineLenght","distanceBetweenPoints","calculateDistanceBetweenPoints","getIntermediatePoints","pointInLine","getFirstNode","getAllNodesExceptFirst","floor","INTERMEDIATE_POINTS_IN_LINE","pointsInLine","pointIndex","ElevationProfile","linePoints","_line","_linePoints","TurfJSElevationProfileToleranceChecker","elevationProfile","ElevationProfileResponseType","Height","height","_height","toString2D","Line3D","toLineString3D","toFeatureCollection","ElevationProfileService","line3D","generateLine3DFromResponse","featureCollection","points3D","firstFeature","secondFeature","feature_index","featureKey","FeatureCollectionOfLines","ElevationProfileHandler","lineToPoint","LineString3D","fullWmsEndpoint","promises","Number","all","ElevationProfileGetFeatureInfoHandler","HealthCheck","status","Level","level","ensureIsValidLevel","TIFFWaterRiseXMLGenerator","generate","areaBackgroundColor","areaOpacity","PNGWaterRiseXMLGenerator","WaterRise","outputFormat","ensureValidOutputFormat","areaValidOpacity","_level","_outputFormat","_xmlGenerator","_areaBackgoundColor","_areaOpacity","WaterRiseTurfJSToleranceChecker","waterRise","WaterRiseService","WaterRiseHandler"],"mappings":"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","file":"main.js","sourcesContent":["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var Lifecycle;\n(function (Lifecycle) {\n    Lifecycle[Lifecycle[\"Transient\"] = 0] = \"Transient\";\n    Lifecycle[Lifecycle[\"Singleton\"] = 1] = \"Singleton\";\n    Lifecycle[Lifecycle[\"ResolutionScoped\"] = 2] = \"ResolutionScoped\";\n    Lifecycle[Lifecycle[\"ContainerScoped\"] = 3] = \"ContainerScoped\";\n})(Lifecycle || (Lifecycle = {}));\nexport default Lifecycle;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isClassProvider(provider) {\n    return !!provider.useClass;\n}\n","export function isFactoryProvider(provider) {\n    return !!provider.useFactory;\n}\n","import { __read, __spread } from \"tslib\";\nvar DelayedConstructor = (function () {\n    function DelayedConstructor(wrap) {\n        this.wrap = wrap;\n        this.reflectMethods = [\n            \"get\",\n            \"getPrototypeOf\",\n            \"setPrototypeOf\",\n            \"getOwnPropertyDescriptor\",\n            \"defineProperty\",\n            \"has\",\n            \"set\",\n            \"deleteProperty\",\n            \"apply\",\n            \"construct\",\n            \"ownKeys\"\n        ];\n    }\n    DelayedConstructor.prototype.createProxy = function (createObject) {\n        var _this = this;\n        var target = {};\n        var init = false;\n        var value;\n        var delayedObject = function () {\n            if (!init) {\n                value = createObject(_this.wrap());\n                init = true;\n            }\n            return value;\n        };\n        return new Proxy(target, this.createHandler(delayedObject));\n    };\n    DelayedConstructor.prototype.createHandler = function (delayedObject) {\n        var handler = {};\n        var install = function (name) {\n            handler[name] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                args[0] = delayedObject();\n                var method = Reflect[name];\n                return method.apply(void 0, __spread(args));\n            };\n        };\n        this.reflectMethods.forEach(install);\n        return handler;\n    };\n    return DelayedConstructor;\n}());\nexport { DelayedConstructor };\nexport function delay(wrappedConstructor) {\n    if (typeof wrappedConstructor === \"undefined\") {\n        throw new Error(\"Attempt to `delay` undefined. Constructor must be wrapped in a callback\");\n    }\n    return new DelayedConstructor(wrappedConstructor);\n}\n","import { DelayedConstructor } from \"../lazy-helpers\";\nexport function isNormalToken(token) {\n    return typeof token === \"string\" || typeof token === \"symbol\";\n}\nexport function isTokenDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"multiple\" in descriptor);\n}\nexport function isTransformDescriptor(descriptor) {\n    return (typeof descriptor === \"object\" &&\n        \"token\" in descriptor &&\n        \"transform\" in descriptor);\n}\nexport function isConstructorToken(token) {\n    return typeof token === \"function\" || token instanceof DelayedConstructor;\n}\n","export function isTokenProvider(provider) {\n    return !!provider.useToken;\n}\n","export function isValueProvider(provider) {\n    return provider.useValue != undefined;\n}\n","var RegistryBase = (function () {\n    function RegistryBase() {\n        this._registryMap = new Map();\n    }\n    RegistryBase.prototype.entries = function () {\n        return this._registryMap.entries();\n    };\n    RegistryBase.prototype.getAll = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key);\n    };\n    RegistryBase.prototype.get = function (key) {\n        this.ensure(key);\n        var value = this._registryMap.get(key);\n        return value[value.length - 1] || null;\n    };\n    RegistryBase.prototype.set = function (key, value) {\n        this.ensure(key);\n        this._registryMap.get(key).push(value);\n    };\n    RegistryBase.prototype.setAll = function (key, value) {\n        this._registryMap.set(key, value);\n    };\n    RegistryBase.prototype.has = function (key) {\n        this.ensure(key);\n        return this._registryMap.get(key).length > 0;\n    };\n    RegistryBase.prototype.clear = function () {\n        this._registryMap.clear();\n    };\n    RegistryBase.prototype.ensure = function (key) {\n        if (!this._registryMap.has(key)) {\n            this._registryMap.set(key, []);\n        }\n    };\n    return RegistryBase;\n}());\nexport default RegistryBase;\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar Registry = (function (_super) {\n    __extends(Registry, _super);\n    function Registry() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Registry;\n}(RegistryBase));\nexport default Registry;\n","var ResolutionContext = (function () {\n    function ResolutionContext() {\n        this.scopedResolutions = new Map();\n    }\n    return ResolutionContext;\n}());\nexport default ResolutionContext;\n","import { __extends } from \"tslib\";\nimport RegistryBase from \"./registry-base\";\nvar PreResolutionInterceptors = (function (_super) {\n    __extends(PreResolutionInterceptors, _super);\n    function PreResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PreResolutionInterceptors;\n}(RegistryBase));\nexport { PreResolutionInterceptors };\nvar PostResolutionInterceptors = (function (_super) {\n    __extends(PostResolutionInterceptors, _super);\n    function PostResolutionInterceptors() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PostResolutionInterceptors;\n}(RegistryBase));\nexport { PostResolutionInterceptors };\nvar Interceptors = (function () {\n    function Interceptors() {\n        this.preResolution = new PreResolutionInterceptors();\n        this.postResolution = new PostResolutionInterceptors();\n    }\n    return Interceptors;\n}());\nexport default Interceptors;\n","import { __read, __spread, __values } from \"tslib\";\nimport { isClassProvider, isFactoryProvider, isNormalToken, isTokenProvider, isValueProvider } from \"./providers\";\nimport { isProvider } from \"./providers/provider\";\nimport { isConstructorToken, isTokenDescriptor, isTransformDescriptor } from \"./providers/injection-token\";\nimport Registry from \"./registry\";\nimport Lifecycle from \"./types/lifecycle\";\nimport ResolutionContext from \"./resolution-context\";\nimport { formatErrorCtor } from \"./error-helpers\";\nimport { DelayedConstructor } from \"./lazy-helpers\";\nimport Interceptors from \"./interceptors\";\nexport var typeInfo = new Map();\nvar InternalDependencyContainer = (function () {\n    function InternalDependencyContainer(parent) {\n        this.parent = parent;\n        this._registry = new Registry();\n        this.interceptors = new Interceptors();\n    }\n    InternalDependencyContainer.prototype.register = function (token, providerOrConstructor, options) {\n        if (options === void 0) { options = { lifecycle: Lifecycle.Transient }; }\n        var provider;\n        if (!isProvider(providerOrConstructor)) {\n            provider = { useClass: providerOrConstructor };\n        }\n        else {\n            provider = providerOrConstructor;\n        }\n        if (isTokenProvider(provider)) {\n            var path = [token];\n            var tokenProvider = provider;\n            while (tokenProvider != null) {\n                var currentToken = tokenProvider.useToken;\n                if (path.includes(currentToken)) {\n                    throw new Error(\"Token registration cycle detected! \" + __spread(path, [currentToken]).join(\" -> \"));\n                }\n                path.push(currentToken);\n                var registration = this._registry.get(currentToken);\n                if (registration && isTokenProvider(registration.provider)) {\n                    tokenProvider = registration.provider;\n                }\n                else {\n                    tokenProvider = null;\n                }\n            }\n        }\n        if (options.lifecycle === Lifecycle.Singleton ||\n            options.lifecycle == Lifecycle.ContainerScoped ||\n            options.lifecycle == Lifecycle.ResolutionScoped) {\n            if (isValueProvider(provider) || isFactoryProvider(provider)) {\n                throw new Error(\"Cannot use lifecycle \\\"\" + Lifecycle[options.lifecycle] + \"\\\" with ValueProviders or FactoryProviders\");\n            }\n        }\n        this._registry.set(token, { provider: provider, options: options });\n        return this;\n    };\n    InternalDependencyContainer.prototype.registerType = function (from, to) {\n        if (isNormalToken(to)) {\n            return this.register(from, {\n                useToken: to\n            });\n        }\n        return this.register(from, {\n            useClass: to\n        });\n    };\n    InternalDependencyContainer.prototype.registerInstance = function (token, instance) {\n        return this.register(token, {\n            useValue: instance\n        });\n    };\n    InternalDependencyContainer.prototype.registerSingleton = function (from, to) {\n        if (isNormalToken(from)) {\n            if (isNormalToken(to)) {\n                return this.register(from, {\n                    useToken: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            else if (to) {\n                return this.register(from, {\n                    useClass: to\n                }, { lifecycle: Lifecycle.Singleton });\n            }\n            throw new Error('Cannot register a type name as a singleton without a \"to\" token');\n        }\n        var useClass = from;\n        if (to && !isNormalToken(to)) {\n            useClass = to;\n        }\n        return this.register(from, {\n            useClass: useClass\n        }, { lifecycle: Lifecycle.Singleton });\n    };\n    InternalDependencyContainer.prototype.resolve = function (token, context) {\n        if (context === void 0) { context = new ResolutionContext(); }\n        var registration = this.getRegistration(token);\n        if (!registration && isNormalToken(token)) {\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"Single\");\n        if (registration) {\n            var result = this.resolveRegistration(registration, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        if (isConstructorToken(token)) {\n            var result = this.construct(token, context);\n            this.executePostResolutionInterceptor(token, result, \"Single\");\n            return result;\n        }\n        throw new Error(\"Attempted to construct an undefined constructor. Could mean a circular dependency problem. Try using `delay` function.\");\n    };\n    InternalDependencyContainer.prototype.executePreResolutionInterceptor = function (token, resolutionType) {\n        var e_1, _a;\n        if (this.interceptors.preResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.preResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, resolutionType);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.interceptors.preResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.executePostResolutionInterceptor = function (token, result, resolutionType) {\n        var e_2, _a;\n        if (this.interceptors.postResolution.has(token)) {\n            var remainingInterceptors = [];\n            try {\n                for (var _b = __values(this.interceptors.postResolution.getAll(token)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var interceptor = _c.value;\n                    if (interceptor.options.frequency != \"Once\") {\n                        remainingInterceptors.push(interceptor);\n                    }\n                    interceptor.callback(token, result, resolutionType);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this.interceptors.postResolution.setAll(token, remainingInterceptors);\n        }\n    };\n    InternalDependencyContainer.prototype.resolveRegistration = function (registration, context) {\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped &&\n            context.scopedResolutions.has(registration)) {\n            return context.scopedResolutions.get(registration);\n        }\n        var isSingleton = registration.options.lifecycle === Lifecycle.Singleton;\n        var isContainerScoped = registration.options.lifecycle === Lifecycle.ContainerScoped;\n        var returnInstance = isSingleton || isContainerScoped;\n        var resolved;\n        if (isValueProvider(registration.provider)) {\n            resolved = registration.provider.useValue;\n        }\n        else if (isTokenProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.resolve(registration.provider.useToken, context))\n                : this.resolve(registration.provider.useToken, context);\n        }\n        else if (isClassProvider(registration.provider)) {\n            resolved = returnInstance\n                ? registration.instance ||\n                    (registration.instance = this.construct(registration.provider.useClass, context))\n                : this.construct(registration.provider.useClass, context);\n        }\n        else if (isFactoryProvider(registration.provider)) {\n            resolved = registration.provider.useFactory(this);\n        }\n        else {\n            resolved = this.construct(registration.provider, context);\n        }\n        if (registration.options.lifecycle === Lifecycle.ResolutionScoped) {\n            context.scopedResolutions.set(registration, resolved);\n        }\n        return resolved;\n    };\n    InternalDependencyContainer.prototype.resolveAll = function (token, context) {\n        var _this = this;\n        if (context === void 0) { context = new ResolutionContext(); }\n        var registrations = this.getAllRegistrations(token);\n        if (!registrations && isNormalToken(token)) {\n            throw new Error(\"Attempted to resolve unregistered dependency token: \\\"\" + token.toString() + \"\\\"\");\n        }\n        this.executePreResolutionInterceptor(token, \"All\");\n        if (registrations) {\n            var result_1 = registrations.map(function (item) {\n                return _this.resolveRegistration(item, context);\n            });\n            this.executePostResolutionInterceptor(token, result_1, \"All\");\n            return result_1;\n        }\n        var result = [this.construct(token, context)];\n        this.executePostResolutionInterceptor(token, result, \"All\");\n        return result;\n    };\n    InternalDependencyContainer.prototype.isRegistered = function (token, recursive) {\n        if (recursive === void 0) { recursive = false; }\n        return (this._registry.has(token) ||\n            (recursive &&\n                (this.parent || false) &&\n                this.parent.isRegistered(token, true)));\n    };\n    InternalDependencyContainer.prototype.reset = function () {\n        this._registry.clear();\n        this.interceptors.preResolution.clear();\n        this.interceptors.postResolution.clear();\n    };\n    InternalDependencyContainer.prototype.clearInstances = function () {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                this._registry.setAll(token, registrations\n                    .filter(function (registration) { return !isValueProvider(registration.provider); })\n                    .map(function (registration) {\n                    registration.instance = undefined;\n                    return registration;\n                }));\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    InternalDependencyContainer.prototype.createChildContainer = function () {\n        var e_4, _a;\n        var childContainer = new InternalDependencyContainer(this);\n        try {\n            for (var _b = __values(this._registry.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), token = _d[0], registrations = _d[1];\n                if (registrations.some(function (_a) {\n                    var options = _a.options;\n                    return options.lifecycle === Lifecycle.ContainerScoped;\n                })) {\n                    childContainer._registry.setAll(token, registrations.map(function (registration) {\n                        if (registration.options.lifecycle === Lifecycle.ContainerScoped) {\n                            return {\n                                provider: registration.provider,\n                                options: registration.options\n                            };\n                        }\n                        return registration;\n                    }));\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return childContainer;\n    };\n    InternalDependencyContainer.prototype.beforeResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.preResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.afterResolution = function (token, callback, options) {\n        if (options === void 0) { options = { frequency: \"Always\" }; }\n        this.interceptors.postResolution.set(token, {\n            callback: callback,\n            options: options\n        });\n    };\n    InternalDependencyContainer.prototype.getRegistration = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.get(token);\n        }\n        if (this.parent) {\n            return this.parent.getRegistration(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.getAllRegistrations = function (token) {\n        if (this.isRegistered(token)) {\n            return this._registry.getAll(token);\n        }\n        if (this.parent) {\n            return this.parent.getAllRegistrations(token);\n        }\n        return null;\n    };\n    InternalDependencyContainer.prototype.construct = function (ctor, context) {\n        var _this = this;\n        if (ctor instanceof DelayedConstructor) {\n            return ctor.createProxy(function (target) {\n                return _this.resolve(target, context);\n            });\n        }\n        var paramInfo = typeInfo.get(ctor);\n        if (!paramInfo || paramInfo.length === 0) {\n            if (ctor.length === 0) {\n                return new ctor();\n            }\n            else {\n                throw new Error(\"TypeInfo not known for \\\"\" + ctor.name + \"\\\"\");\n            }\n        }\n        var params = paramInfo.map(this.resolveParams(context, ctor));\n        return new (ctor.bind.apply(ctor, __spread([void 0], params)))();\n    };\n    InternalDependencyContainer.prototype.resolveParams = function (context, ctor) {\n        var _this = this;\n        return function (param, idx) {\n            var _a, _b, _c;\n            try {\n                if (isTokenDescriptor(param)) {\n                    if (isTransformDescriptor(param)) {\n                        return param.multiple\n                            ? (_a = _this.resolve(param.transform)).transform.apply(_a, __spread([_this.resolveAll(param.token)], param.transformArgs)) : (_b = _this.resolve(param.transform)).transform.apply(_b, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                    }\n                    else {\n                        return param.multiple\n                            ? _this.resolveAll(param.token)\n                            : _this.resolve(param.token, context);\n                    }\n                }\n                else if (isTransformDescriptor(param)) {\n                    return (_c = _this.resolve(param.transform, context)).transform.apply(_c, __spread([_this.resolve(param.token, context)], param.transformArgs));\n                }\n                return _this.resolve(param, context);\n            }\n            catch (e) {\n                throw new Error(formatErrorCtor(ctor, idx, e));\n            }\n        };\n    };\n    return InternalDependencyContainer;\n}());\nexport var instance = new InternalDependencyContainer();\nexport default instance;\n","import { isClassProvider } from \"./class-provider\";\nimport { isValueProvider } from \"./value-provider\";\nimport { isTokenProvider } from \"./token-provider\";\nimport { isFactoryProvider } from \"./factory-provider\";\nexport function isProvider(provider) {\n    return (isClassProvider(provider) ||\n        isValueProvider(provider) ||\n        isTokenProvider(provider) ||\n        isFactoryProvider(provider));\n}\n","import { __read, __spread } from \"tslib\";\nfunction formatDependency(params, idx) {\n    if (params === null) {\n        return \"at position #\" + idx;\n    }\n    var argName = params.split(\",\")[idx].trim();\n    return \"\\\"\" + argName + \"\\\" at position #\" + idx;\n}\nfunction composeErrorMessage(msg, e, indent) {\n    if (indent === void 0) { indent = \"    \"; }\n    return __spread([msg], e.message.split(\"\\n\").map(function (l) { return indent + l; })).join(\"\\n\");\n}\nexport function formatErrorCtor(ctor, paramIdx, error) {\n    var _a = __read(ctor.toString().match(/constructor\\(([\\w, ]+)\\)/) || [], 2), _b = _a[1], params = _b === void 0 ? null : _b;\n    var dep = formatDependency(params, paramIdx);\n    return composeErrorMessage(\"Cannot inject the dependency \" + dep + \" of \\\"\" + ctor.name + \"\\\" constructor. Reason:\", error);\n}\n","export var INJECTION_TOKEN_METADATA_KEY = \"injectionTokens\";\nexport function getParamInfo(target) {\n    var params = Reflect.getMetadata(\"design:paramtypes\", target) || [];\n    var injectionTokens = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n    Object.keys(injectionTokens).forEach(function (key) {\n        params[+key] = injectionTokens[key];\n    });\n    return params;\n}\nexport function defineInjectionTokenMetadata(data, transform) {\n    return function (target, _propertyKey, parameterIndex) {\n        var descriptors = Reflect.getOwnMetadata(INJECTION_TOKEN_METADATA_KEY, target) || {};\n        descriptors[parameterIndex] = transform\n            ? {\n                token: data,\n                transform: transform.transformToken,\n                transformArgs: transform.args || []\n            }\n            : data;\n        Reflect.defineMetadata(INJECTION_TOKEN_METADATA_KEY, descriptors, target);\n    };\n}\n","import { defineInjectionTokenMetadata } from \"../reflection-helpers\";\nfunction inject(token) {\n    return defineInjectionTokenMetadata(token);\n}\nexport default inject;\n","import { getParamInfo } from \"../reflection-helpers\";\nimport { typeInfo } from \"../dependency-container\";\nfunction injectable() {\n    return function (target) {\n        typeInfo.set(target, getParamInfo(target));\n    };\n}\nexport default injectable;\n","if (typeof Reflect === \"undefined\" || !Reflect.getMetadata) {\n    throw new Error(\"tsyringe requires a reflect polyfill. Please add 'import \\\"reflect-metadata\\\"' to the top of your entry point.\");\n}\nexport { Lifecycle } from \"./types\";\nexport * from \"./decorators\";\nexport * from \"./factories\";\nexport * from \"./providers\";\nexport { delay } from \"./lazy-helpers\";\nexport { instance as container } from \"./dependency-container\";\n","export default class NumberValueObject {\n    constructor(value) {\n        this._value = value;\n        this.ensureIsValidValue();\n    }\n    get value() {\n        return this._value;\n    }\n    ensureIsValidValue() {\n        if (isNaN(this._value)) {\n            throw RangeError(\"The value must be a number\");\n        }\n    }\n}\n","import NumberValueObject from \"./NumberValueObject\";\nexport default class Equidistance extends NumberValueObject {\n    constructor(longitude) {\n        super(longitude);\n        this.ensureIsValidEquidistance();\n    }\n    ensureIsValidEquidistance() {\n        if (this.value < 10 || this.value > 10000) {\n            throw RangeError(\"The equidistance must be between 10 and 10000\");\n        }\n    }\n}\n","import NumberValueObject from \"./NumberValueObject\";\nexport default class Latitude extends NumberValueObject {\n    constructor(longitude) {\n        super(longitude);\n        this.ensureIsValidLatitude();\n    }\n    ensureIsValidLatitude() {\n        if (this.value < -84 || this.value > -20) {\n            throw RangeError(\"The latitud must be between -84 and -20\");\n        }\n    }\n}\n","export default class StringValueObject {\n    constructor(value) {\n        this._value = value;\n        this.ensureIsValidValue();\n    }\n    get value() {\n        return this._value;\n    }\n    ensureIsValidValue() {\n        if (this._value === \"\") {\n            throw RangeError(\"The value cannot be empty\");\n        }\n    }\n}\n","import StringValueObject from \"./StringValueObject\";\nexport default class LayerFullname extends StringValueObject {\n    constructor(layerFullname) {\n        super(layerFullname);\n    }\n}\n","import NumberValueObject from \"./NumberValueObject\";\nexport default class Longitude extends NumberValueObject {\n    constructor(longitude) {\n        super(longitude);\n        this.ensureIsValidLongitude();\n    }\n    ensureIsValidLongitude() {\n        if (this.value < -74 || this.value > -52) {\n            throw RangeError(\"The longitude must be between -74 and -52\");\n        }\n    }\n}\n","import Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nexport default class Point {\n    constructor(longitude, latitude) {\n        this._longitude = longitude;\n        this._latitude = latitude;\n    }\n    get value() {\n        return [this._longitude, this._latitude];\n    }\n    get longitude() {\n        return this._longitude;\n    }\n    get latitude() {\n        return this._latitude;\n    }\n    get toString() {\n        return `${this._longitude.value},${this._latitude.value}`;\n    }\n    toProcessString() {\n        return `${this._longitude.value} ${this._latitude.value}`;\n    }\n    static createFromString(stringPoint) {\n        const arrayPoint = stringPoint.split(\" \");\n        return new Point(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1])));\n    }\n    get moveLongitude() {\n        return new Longitude(this._longitude.value + 0.0000001);\n    }\n    get moveLatitude() {\n        return new Latitude(this._latitude.value + 0.0000001);\n    }\n}\n","import Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nimport Point from \"./Point\";\nexport default class Polygon {\n    constructor(points) {\n        this._value = points;\n    }\n    static createFromString(stringPolygon) {\n        const points = [];\n        const arrayPolygon = stringPolygon\n            .trim()\n            .replace(\"\\n\", \"\")\n            .replace(\"  \", \" \")\n            .replace(\"  \", \" \")\n            .split(\",\");\n        arrayPolygon.forEach((stringPoint) => {\n            const arrayPoint = stringPoint.trim().split(\" \");\n            points.push(new Point(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1]))));\n        });\n        return new Polygon(points);\n    }\n    get value() {\n        return this._value;\n    }\n    toString() {\n        const points = [];\n        this.value.forEach((point) => {\n            points.push(point.toString);\n        });\n        return `[[${points.join(\"],[\")}]]`;\n    }\n    coordinates() {\n        const jsonString = `{\n      \"type\": \"FeatureCollection\",\n      \"name\": \"test\",\n      \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n      \"features\": [\n        { \"type\": \"Feature\", \"properties\": { }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ ${this.toString()} ] } }\n      ]\n    }`;\n        return JSON.parse(jsonString).features[0].geometry.coordinates;\n    }\n}\n","import StringValueObject from \"./StringValueObject\";\nexport default class wpsEndpoint extends StringValueObject {\n    constructor(wpsEndpoint) {\n        super(wpsEndpoint);\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport default class PostmanHTTP {\n    post(url, content) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Opciones por defecto estan marcadas con un *\n            const response = yield fetch(url, {\n                method: \"POST\",\n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\",\n                body: content, // body data type must match \"Content-Type\" header\n            });\n            return response.json(); // parses JSON response into native JavaScript objects\n        });\n    }\n    postReturningBlob(url, content) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Opciones por defecto estan marcadas con un *\n            const response = yield fetch(url, {\n                method: \"POST\",\n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\",\n                body: content, // body data type must match \"Content-Type\" header\n            });\n            return response.blob();\n        });\n    }\n    get(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Opciones por defecto estan marcadas con un *\n            const response = yield fetch(url, {\n                method: \"POST\",\n                mode: \"cors\",\n                cache: \"no-cache\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                },\n                redirect: \"follow\",\n                referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            });\n            return response.json(); // parses JSON response into native JavaScript objects\n        });\n    }\n}\n","export default class Contour {\n    constructor(longitudeLower, latitudeLower, longitudeUpper, latitudeUpper, equidistance, wpsEndpoint, mdeLayerFullname) {\n        this._longitudeLower = longitudeLower;\n        this._latitudeLower = latitudeLower;\n        this._longitudeUpper = longitudeUpper;\n        this._latitudeUpper = latitudeUpper;\n        this._equidistance = equidistance;\n        this._wpsEndpoint = wpsEndpoint;\n        this._mdeLayerFullname = mdeLayerFullname;\n    }\n    get longitudeLower() {\n        return this._longitudeLower;\n    }\n    get latitudeLower() {\n        return this._latitudeLower;\n    }\n    get longitudeUpper() {\n        return this._longitudeUpper;\n    }\n    get latitudeUpper() {\n        return this._latitudeUpper;\n    }\n    get equidistance() {\n        return this._equidistance;\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    get fullWpsEndpoint() {\n        return `${this.wpsEndpoint.value}&request=Execute&identifier=gs:Contour`;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?><wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n    <ows:Identifier>gs:Contour</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>data</ows:Identifier>\n        <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n          <wps:Body>\n            <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n              <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n              <wcs:DomainSubset>\n                <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                  <ows:LowerCorner>${this._longitudeLower.value} ${this._latitudeLower.value}</ows:LowerCorner>\n                  <ows:UpperCorner>${this._longitudeUpper.value} ${this._latitudeUpper.value}</ows:UpperCorner>\n                </ows:BoundingBox>\n              </wcs:DomainSubset>\n              <wcs:Output format=\"image/tiff\"/>\n            </wcs:GetCoverage>\n          </wps:Body>\n        </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>band</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>0</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>simplify</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>true</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>smooth</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>false</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>interval</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>${this._equidistance.value}</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType=\"application/json\">\n        <ows:Identifier>result</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`;\n    }\n}\nContour.MAX_AREA_ALLOWED = 100000000;\nContour.MIN_VALLEY_EQUIDISTANCE_ALLOWED = 10;\nContour.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED = 10;\nContour.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"rectangle\"],\n        \"points\": [\"ne\", \"sw\"]\n      },\n      {\n        \"name\": \"Equidistancia\",\n        \"element\": \"input\",\n        \"type\": \"number\",\n        \"min\": 10,\n        \"max\": 10000\n      }\n    ]`);\n","import StringValueObject from \"../../Shared/domain/StringValueObject\";\nexport default class ContourV2 {\n    constructor(polygon, equidistance, wpsEndpoint) {\n        this._polygon = polygon;\n        this._equidistance = equidistance;\n        this._wpsEndpoint = wpsEndpoint;\n        this._baseRasterLayer = new StringValueObject(\"geoprocess:alos_unificado\");\n    }\n    get polygon() {\n        return this._polygon;\n    }\n    get equidistance() {\n        return this._equidistance;\n    }\n    rectangle() {\n        return this._polygon.toString();\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    get fullWpsEndpoint() {\n        return `${this.wpsEndpoint.value}&request=Execute&identifier=gs:Contour`;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?><wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n    <ows:Identifier>gs:Contour</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>data</ows:Identifier>\n        <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n              \n              <!-- ras:CropCoverage -->\n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>coverage</ows:Identifier>\n                    <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n                      <wps:Body>\n                        <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n                          <ows:Identifier>${this._baseRasterLayer.value}</ows:Identifier>\n                          <wcs:DomainSubset>\n                            <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                              <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                              <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                            </ows:BoundingBox>\n                          </wcs:DomainSubset>\n                          <wcs:Output format=\"image/tiff\"/>\n                        </wcs:GetCoverage>\n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>cropShape</ows:Identifier>\n                    <wps:Data>\n                      <wps:ComplexData mimeType=\"application/json\"><![CDATA[{\n                        \"geometry\": {\n                        \"type\": \"Polygon\",\n                        \"coordinates\": [ ${this.rectangle()} ] } }]]>\n                      </wps:ComplexData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"image/tiff\">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              <!-- /ras:CropCoverage -->\n  \n            </wps:Body>\n          </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>interval</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>${this._equidistance.value}</wps:LiteralData>\n        </wps:Data>\n      </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType=\"application/json\">\n        <ows:Identifier>result</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`;\n    }\n}\nContourV2.MAX_AREA_ALLOWED = 100000000;\nContourV2.MIN_VALLEY_EQUIDISTANCE_ALLOWED = 10;\nContourV2.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED = 100;\nContourV2.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"rectangle\"],\n        \"points\": [\"ne\", \"sw\"]\n      },\n      {\n        \"name\": \"Equidistancia\",\n        \"element\": \"input\",\n        \"type\": \"number\",\n        \"min\": 10,\n        \"max\": 10000\n      }\n    ]`);\n","/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexport var earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var factors = {\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    degrees: earthRadius / 111325,\n    feet: earthRadius * 3.28084,\n    inches: earthRadius * 39.37,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    meters: earthRadius,\n    metres: earthRadius,\n    miles: earthRadius / 1609.344,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    nauticalmiles: earthRadius / 1852,\n    radians: 1,\n    yards: earthRadius * 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.37,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / earthRadius,\n    yards: 1.0936133,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexport var areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    hectares: 0.0001,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nexport function feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nexport function geometry(type, coordinates, _options) {\n    if (_options === void 0) { _options = {}; }\n    switch (type) {\n        case \"Point\":\n            return point(coordinates).geometry;\n        case \"LineString\":\n            return lineString(coordinates).geometry;\n        case \"Polygon\":\n            return polygon(coordinates).geometry;\n        case \"MultiPoint\":\n            return multiPoint(coordinates).geometry;\n        case \"MultiLineString\":\n            return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\":\n            return multiPolygon(coordinates).geometry;\n        default:\n            throw new Error(type + \" is invalid\");\n    }\n}\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nexport function point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (!coordinates) {\n        throw new Error(\"coordinates is required\");\n    }\n    if (!Array.isArray(coordinates)) {\n        throw new Error(\"coordinates must be an Array\");\n    }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be at least 2 numbers long\");\n    }\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n        throw new Error(\"coordinates must contain numbers\");\n    }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nexport function points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nexport function polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nexport function polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nexport function lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nexport function lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nexport function featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nexport function multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nexport function multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nexport function multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nexport function geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nexport function round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nexport function radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nexport function lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nexport function lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nexport function bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nexport function radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return (degrees * 180) / Math.PI;\n}\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nexport function degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return (radians * Math.PI) / 180;\n}\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nexport function convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches, hectares\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted area\n */\nexport function convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nexport function isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nexport function isObject(input) {\n    return !!input && input.constructor === Object;\n}\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nexport function validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nexport function validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\n","import { feature, point, lineString, isObject } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  // Handles null Geometry -- Skips this GeoJSON\n  if (geojson === null) return;\n  var j,\n    k,\n    l,\n    geometry,\n    stopG,\n    coords,\n    geometryMaybeCollection,\n    wrapShrink = 0,\n    coordIndex = 0,\n    isGeometryCollection,\n    type = geojson.type,\n    isFeatureCollection = type === \"FeatureCollection\",\n    isFeature = type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[featureIndex].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[geomIndex]\n        : geometryMaybeCollection;\n\n      // Handles null Geometry -- Skips this geometry\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n\n      wrapShrink =\n        excludeWrapCoord &&\n        (geomType === \"Polygon\" || geomType === \"MultiPolygon\")\n          ? 1\n          : 0;\n\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (\n            callback(\n              coords,\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (\n              callback(\n                coords[j],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false\n            )\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (\n                callback(\n                  coords[j][k],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false\n              )\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (\n                  callback(\n                    coords[j][k][l],\n                    coordIndex,\n                    featureIndex,\n                    multiFeatureIndex,\n                    geometryIndex\n                  ) === false\n                )\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (\n              coordEach(geometry.geometries[j], callback, excludeWrapCoord) ===\n              false\n            )\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function (\n      currentCoord,\n      coordIndex,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex\n    ) {\n      if (coordIndex === 0 && initialValue === undefined)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function (currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function (currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === undefined)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function (coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n  var i,\n    j,\n    g,\n    geometry,\n    stopG,\n    geometryMaybeCollection,\n    isGeometryCollection,\n    featureProperties,\n    featureBBox,\n    featureId,\n    featureIndex = 0,\n    isFeatureCollection = geojson.type === \"FeatureCollection\",\n    isFeature = geojson.type === \"Feature\",\n    stop = isFeatureCollection ? geojson.features.length : 1;\n\n  // This logic may look a little weird. The reason why it is that way\n  // is because it's trying to be fast. GeoJSON supports multiple kinds\n  // of objects at its root: FeatureCollection, Features, Geometries.\n  // This function has the responsibility of handling all of them, and that\n  // means that some of the `for` loops you see below actually just don't apply\n  // to certain inputs. For instance, if you give this just a\n  // Point geometry, then both loops are short-circuited and all we do\n  // is gradually rename the input until it's called 'geometry'.\n  //\n  // This also aims to allocate as few resources as possible: just a\n  // few numbers and booleans, rather than any temporary arrays as would\n  // be required with the normalization approach.\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection\n      ? geojson.features[i].geometry\n      : isFeature\n      ? geojson.geometry\n      : geojson;\n    featureProperties = isFeatureCollection\n      ? geojson.features[i].properties\n      : isFeature\n      ? geojson.properties\n      : {};\n    featureBBox = isFeatureCollection\n      ? geojson.features[i].bbox\n      : isFeature\n      ? geojson.bbox\n      : undefined;\n    featureId = isFeatureCollection\n      ? geojson.features[i].id\n      : isFeature\n      ? geojson.id\n      : undefined;\n    isGeometryCollection = geometryMaybeCollection\n      ? geometryMaybeCollection.type === \"GeometryCollection\"\n      : false;\n    stopG = isGeometryCollection\n      ? geometryMaybeCollection.geometries.length\n      : 1;\n\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection\n        ? geometryMaybeCollection.geometries[g]\n        : geometryMaybeCollection;\n\n      // Handle null Geometry\n      if (geometry === null) {\n        if (\n          callback(\n            null,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false\n        )\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (\n            callback(\n              geometry,\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false\n          )\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (\n              callback(\n                geometry.geometries[j],\n                featureIndex,\n                featureProperties,\n                featureBBox,\n                featureId\n              ) === false\n            )\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    // Only increase `featureIndex` per each feature\n    featureIndex++;\n  }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function (\n      currentGeometry,\n      featureIndex,\n      featureProperties,\n      featureBBox,\n      featureId\n    ) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n    // Callback for single geometry\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (\n          callback(\n            feature(geometry, properties, { bbox: bbox, id: id }),\n            featureIndex,\n            0\n          ) === false\n        )\n          return false;\n        return;\n    }\n\n    var geomType;\n\n    // Callback for multi-geometry\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n\n    for (\n      var multiFeatureIndex = 0;\n      multiFeatureIndex < geometry.coordinates.length;\n      multiFeatureIndex++\n    ) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate,\n      };\n      if (\n        callback(feature(geom, properties), featureIndex, multiFeatureIndex) ===\n        false\n      )\n        return false;\n    }\n  });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function (currentFeature, featureIndex, multiFeatureIndex) {\n      if (\n        featureIndex === 0 &&\n        multiFeatureIndex === 0 &&\n        initialValue === undefined\n      )\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n\n    // Exclude null Geometries\n    if (!feature$$1.geometry) return;\n    // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n    var type = feature$$1.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n\n    // Generate 2-vertex line segments\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (\n      coordEach(\n        feature$$1,\n        function (\n          currentCoord,\n          coordIndex,\n          featureIndexCoord,\n          multiPartIndexCoord,\n          geometryIndex\n        ) {\n          // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n          if (\n            previousCoords === undefined ||\n            featureIndex > previousFeatureIndex ||\n            multiPartIndexCoord > previousMultiIndex ||\n            geometryIndex > prevGeomIndex\n          ) {\n            previousCoords = currentCoord;\n            previousFeatureIndex = featureIndex;\n            previousMultiIndex = multiPartIndexCoord;\n            prevGeomIndex = geometryIndex;\n            segmentIndex = 0;\n            return;\n          }\n          var currentSegment = lineString(\n            [previousCoords, currentCoord],\n            feature$$1.properties\n          );\n          if (\n            callback(\n              currentSegment,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex,\n              segmentIndex\n            ) === false\n          )\n            return false;\n          segmentIndex++;\n          previousCoords = currentCoord;\n        }\n      ) === false\n    )\n      return false;\n  });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentIndex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function (\n      currentSegment,\n      featureIndex,\n      multiFeatureIndex,\n      geometryIndex,\n      segmentIndex\n    ) {\n      if (started === false && initialValue === undefined)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n  // validation\n  if (!geojson) throw new Error(\"geojson is required\");\n\n  flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n    if (feature$$1.geometry === null) return;\n    var type = feature$$1.geometry.type;\n    var coords = feature$$1.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (\n          var geometryIndex = 0;\n          geometryIndex < coords.length;\n          geometryIndex++\n        ) {\n          if (\n            callback(\n              lineString(coords[geometryIndex], feature$$1.properties),\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false\n          )\n            return false;\n        }\n        break;\n    }\n  });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === undefined)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find SegmentIndex\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex =\n          coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1],\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n  // Optional Parameters\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n\n  // Find FeatureIndex\n  var properties = options.properties;\n  var geometry;\n\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n\n  // Find Coord Index\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex =\n          coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { geomReduce } from \"@turf/meta\";\n// Note: change RADIUS => earthRadius\nvar RADIUS = 6378137;\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nexport default function area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n/**\n * Calculate Area\n *\n * @private\n * @param {Geometry} geom GeoJSON Geometries\n * @returns {number} area\n */\nfunction calculateArea(geom) {\n    var total = 0;\n    var i;\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonArea(geom.coordinates);\n        case \"MultiPolygon\":\n            for (i = 0; i < geom.coordinates.length; i++) {\n                total += polygonArea(geom.coordinates[i]);\n            }\n            return total;\n        case \"Point\":\n        case \"MultiPoint\":\n        case \"LineString\":\n        case \"MultiLineString\":\n            return 0;\n    }\n    return 0;\n}\nfunction polygonArea(coords) {\n    var total = 0;\n    if (coords && coords.length > 0) {\n        total += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            total -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return total;\n}\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\",\n * JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 https://trs.jpl.nasa.gov/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var total = 0;\n    var coordsLength = coords.length;\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {\n                // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            }\n            else if (i === coordsLength - 1) {\n                // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            }\n            else {\n                // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            total += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n        total = (total * RADIUS * RADIUS) / 2;\n    }\n    return total;\n}\nfunction rad(num) {\n    return (num * Math.PI) / 180;\n}\n","import { coordEach } from \"@turf/meta\";\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var result = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (result[0] > coord[0]) {\n            result[0] = coord[0];\n        }\n        if (result[1] > coord[1]) {\n            result[1] = coord[1];\n        }\n        if (result[2] < coord[0]) {\n            result[2] = coord[0];\n        }\n        if (result[3] < coord[1]) {\n            result[3] = coord[1];\n        }\n    });\n    return result;\n}\nbbox[\"default\"] = bbox;\nexport default bbox;\n","import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","import { getCoord, getCoords } from \"@turf/invariant\";\n/**\n * Returns true if a point is on a line. Accepts a optional parameter to ignore the\n * start and end vertices of the linestring.\n *\n * @name booleanPointOnLine\n * @param {Coord} pt GeoJSON Point\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreEndVertices=false] whether to ignore the start and end vertices.\n * @param {number} [options.epsilon] Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * @returns {boolean} true/false\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[-1, -1],[1, 1],[1.5, 2.2]]);\n * var isPointOnLine = turf.booleanPointOnLine(pt, line);\n * //=true\n */\nfunction booleanPointOnLine(pt, line, options) {\n    if (options === void 0) { options = {}; }\n    // Normalize inputs\n    var ptCoords = getCoord(pt);\n    var lineCoords = getCoords(line);\n    // Main\n    for (var i = 0; i < lineCoords.length - 1; i++) {\n        var ignoreBoundary = false;\n        if (options.ignoreEndVertices) {\n            if (i === 0) {\n                ignoreBoundary = \"start\";\n            }\n            if (i === lineCoords.length - 2) {\n                ignoreBoundary = \"end\";\n            }\n            if (i === 0 && i + 1 === lineCoords.length - 1) {\n                ignoreBoundary = \"both\";\n            }\n        }\n        if (isPointOnLineSegment(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary, typeof options.epsilon === \"undefined\" ? null : options.epsilon)) {\n            return true;\n        }\n    }\n    return false;\n}\n// See http://stackoverflow.com/a/4833823/1979085\n// See https://stackoverflow.com/a/328122/1048847\n/**\n * @private\n * @param {Position} lineSegmentStart coord pair of start of line\n * @param {Position} lineSegmentEnd coord pair of end of line\n * @param {Position} pt coord pair of point to check\n * @param {boolean|string} excludeBoundary whether the point is allowed to fall on the line ends.\n * @param {number} epsilon Fractional number to compare with the cross product result. Useful for dealing with floating points such as lng/lat points\n * If true which end to ignore.\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary, epsilon) {\n    var x = pt[0];\n    var y = pt[1];\n    var x1 = lineSegmentStart[0];\n    var y1 = lineSegmentStart[1];\n    var x2 = lineSegmentEnd[0];\n    var y2 = lineSegmentEnd[1];\n    var dxc = pt[0] - x1;\n    var dyc = pt[1] - y1;\n    var dxl = x2 - x1;\n    var dyl = y2 - y1;\n    var cross = dxc * dyl - dyc * dxl;\n    if (epsilon !== null) {\n        if (Math.abs(cross) > epsilon) {\n            return false;\n        }\n    }\n    else if (cross !== 0) {\n        return false;\n    }\n    if (!excludeBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    }\n    else if (excludeBoundary === \"start\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n    }\n    else if (excludeBoundary === \"end\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n    }\n    else if (excludeBoundary === \"both\") {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n    }\n    return false;\n}\nexport default booleanPointOnLine;\n","import calcBbox from \"@turf/bbox\";\nimport booleanPointInPolygon from \"@turf/boolean-point-in-polygon\";\nimport isPointOnLine from \"@turf/boolean-point-on-line\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Boolean-contains returns True if the second geometry is completely contained by the first geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the secondary (geometry b)\n * must not intersect the exterior of the primary (geometry a).\n * Boolean-contains returns the exact opposite result of the `@turf/boolean-within`.\n *\n * @name booleanContains\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanContains(line, point);\n * //=true\n */\nexport default function booleanContains(feature1, feature2) {\n    var geom1 = getGeom(feature1);\n    var geom2 = getGeom(feature2);\n    var type1 = geom1.type;\n    var type2 = geom2.type;\n    var coords1 = geom1.coordinates;\n    var coords2 = geom2.coordinates;\n    switch (type1) {\n        case \"Point\":\n            switch (type2) {\n                case \"Point\":\n                    return compareCoords(coords1, coords2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"MultiPoint\":\n            switch (type2) {\n                case \"Point\":\n                    return isPointInMultiPoint(geom1, geom2);\n                case \"MultiPoint\":\n                    return isMultiPointInMultiPoint(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"LineString\":\n            switch (type2) {\n                case \"Point\":\n                    return isPointOnLine(geom2, geom1, { ignoreEndVertices: true });\n                case \"LineString\":\n                    return isLineOnLine(geom1, geom2);\n                case \"MultiPoint\":\n                    return isMultiPointOnLine(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        case \"Polygon\":\n            switch (type2) {\n                case \"Point\":\n                    return booleanPointInPolygon(geom2, geom1, { ignoreBoundary: true });\n                case \"LineString\":\n                    return isLineInPoly(geom1, geom2);\n                case \"Polygon\":\n                    return isPolyInPoly(geom1, geom2);\n                case \"MultiPoint\":\n                    return isMultiPointInPoly(geom1, geom2);\n                default:\n                    throw new Error(\"feature2 \" + type2 + \" geometry not supported\");\n            }\n        default:\n            throw new Error(\"feature1 \" + type1 + \" geometry not supported\");\n    }\n}\nexport function isPointInMultiPoint(multiPoint, pt) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords(multiPoint.coordinates[i], pt.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\nexport function isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n    for (var _i = 0, _a = multiPoint2.coordinates; _i < _a.length; _i++) {\n        var coord2 = _a[_i];\n        var matchFound = false;\n        for (var _b = 0, _c = multiPoint1.coordinates; _b < _c.length; _b++) {\n            var coord1 = _c[_b];\n            if (compareCoords(coord2, coord1)) {\n                matchFound = true;\n                break;\n            }\n        }\n        if (!matchFound) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isMultiPointOnLine(lineString, multiPoint) {\n    var haveFoundInteriorPoint = false;\n    for (var _i = 0, _a = multiPoint.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (isPointOnLine(coord, lineString, { ignoreEndVertices: true })) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!isPointOnLine(coord, lineString)) {\n            return false;\n        }\n    }\n    if (haveFoundInteriorPoint) {\n        return true;\n    }\n    return false;\n}\nexport function isMultiPointInPoly(polygon, multiPoint) {\n    for (var _i = 0, _a = multiPoint.coordinates; _i < _a.length; _i++) {\n        var coord = _a[_i];\n        if (!booleanPointInPolygon(coord, polygon, { ignoreBoundary: true })) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function isLineOnLine(lineString1, lineString2) {\n    var haveFoundInteriorPoint = false;\n    for (var _i = 0, _a = lineString2.coordinates; _i < _a.length; _i++) {\n        var coords = _a[_i];\n        if (isPointOnLine({ type: \"Point\", coordinates: coords }, lineString1, {\n            ignoreEndVertices: true,\n        })) {\n            haveFoundInteriorPoint = true;\n        }\n        if (!isPointOnLine({ type: \"Point\", coordinates: coords }, lineString1, {\n            ignoreEndVertices: false,\n        })) {\n            return false;\n        }\n    }\n    return haveFoundInteriorPoint;\n}\nexport function isLineInPoly(polygon, linestring) {\n    var output = false;\n    var i = 0;\n    var polyBbox = calcBbox(polygon);\n    var lineBbox = calcBbox(linestring);\n    if (!doBBoxOverlap(polyBbox, lineBbox)) {\n        return false;\n    }\n    for (i; i < linestring.coordinates.length - 1; i++) {\n        var midPoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n        if (booleanPointInPolygon({ type: \"Point\", coordinates: midPoint }, polygon, {\n            ignoreBoundary: true,\n        })) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nexport function isPolyInPoly(feature1, feature2) {\n    // Handle Nulls\n    if (feature1.type === \"Feature\" && feature1.geometry === null) {\n        return false;\n    }\n    if (feature2.type === \"Feature\" && feature2.geometry === null) {\n        return false;\n    }\n    var poly1Bbox = calcBbox(feature1);\n    var poly2Bbox = calcBbox(feature2);\n    if (!doBBoxOverlap(poly1Bbox, poly2Bbox)) {\n        return false;\n    }\n    var coords = getGeom(feature2).coordinates;\n    for (var _i = 0, coords_1 = coords; _i < coords_1.length; _i++) {\n        var ring = coords_1[_i];\n        for (var _a = 0, ring_1 = ring; _a < ring_1.length; _a++) {\n            var coord = ring_1[_a];\n            if (!booleanPointInPolygon(coord, feature1)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function doBBoxOverlap(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0]) {\n        return false;\n    }\n    if (bbox1[2] < bbox2[2]) {\n        return false;\n    }\n    if (bbox1[1] > bbox2[1]) {\n        return false;\n    }\n    if (bbox1[3] < bbox2[3]) {\n        return false;\n    }\n    return true;\n}\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nexport function compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\nexport function getMidpoint(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport area from \"@turf/area\";\nimport booleanContains from \"@turf/boolean-contains\";\nimport { polygon } from \"@turf/helpers\";\nimport { injectable } from \"tsyringe\";\nimport Contour from \"../domain/Contour\";\nimport ContourV2 from \"../domain/ContourV2\";\nlet ContourTurfJSToleranceChecker = class ContourTurfJSToleranceChecker {\n    ensureInputDataIsInTolerance(contour) {\n        const inputPolygon = this.pointsToPolygon(contour.longitudeLower, contour.latitudeLower, contour.longitudeUpper, contour.latitudeUpper);\n        if (area(inputPolygon) > Contour.MAX_AREA_ALLOWED) {\n            throw RangeError(\"The area requested must be less than 100km2\");\n        }\n        const elevatedSurfaces = polygon([\n            [\n                [-73.904443327547412, -51.888469736942632],\n                [-70.88203831519283, -20.86255705909867],\n                [-62.863412772211284, -21.417692673612777],\n                [-64.343774410915572, -28.696137397242179],\n                [-62.678367567373243, -28.881182602080212],\n                [-66.502635134025979, -52.690332291240786],\n                [-73.904443327547412, -51.888469736942632],\n            ],\n        ]);\n        const interseccion = booleanContains(elevatedSurfaces, inputPolygon);\n        if (interseccion == true &&\n            contour.equidistance.value < Contour.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED) {\n            throw RangeError(\"Equidistance must be grather than 100\");\n        }\n        else if (contour.equidistance.value < Contour.MIN_VALLEY_EQUIDISTANCE_ALLOWED) {\n            throw RangeError(\"Equidistance must be grather than 10\");\n        }\n    }\n    pointsToPolygon(longitudeLower, //x2\n    latitudeLower, //y2\n    longitudeUpper, //x1\n    latitudeUpper //y1\n    ) {\n        const x = polygon([\n            [\n                [longitudeUpper.value, latitudeUpper.value],\n                [longitudeUpper.value, latitudeLower.value],\n                [longitudeLower.value, latitudeLower.value],\n                [longitudeLower.value, latitudeUpper.value],\n                [longitudeUpper.value, latitudeUpper.value], //x1y1\n            ],\n        ]);\n        return x;\n    }\n    ensureInputDataIsInToleranceV2(contour) {\n        const inputPolygon = this.pointsToPolygonV2(contour.polygon);\n        if (area(inputPolygon) > ContourV2.MAX_AREA_ALLOWED) {\n            throw RangeError(\"The area requested must be less than 100km2\");\n        }\n        const elevatedSurfaces = polygon([\n            [\n                [-73.904443327547412, -51.888469736942632],\n                [-70.88203831519283, -20.86255705909867],\n                [-62.863412772211284, -21.417692673612777],\n                [-64.343774410915572, -28.696137397242179],\n                [-62.678367567373243, -28.881182602080212],\n                [-66.502635134025979, -52.690332291240786],\n                [-73.904443327547412, -51.888469736942632],\n            ],\n        ]);\n        const interseccion = booleanContains(elevatedSurfaces, inputPolygon);\n        if (interseccion == true &&\n            contour.equidistance.value < Contour.MIN_MOUNTAIN_EQUIDISTANCE_ALLOWED) {\n            throw RangeError(\"Equidistance must be grather than 100\");\n        }\n        else if (contour.equidistance.value < Contour.MIN_VALLEY_EQUIDISTANCE_ALLOWED) {\n            throw RangeError(\"Equidistance must be grather than 10\");\n        }\n    }\n    pointsToPolygonV2(_polygon) {\n        const x = polygon(_polygon.coordinates());\n        return x;\n    }\n};\nContourTurfJSToleranceChecker = __decorate([\n    injectable()\n], ContourTurfJSToleranceChecker);\nexport default ContourTurfJSToleranceChecker;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from \"tsyringe\";\nimport Contour from \"../domain/Contour\";\nlet ContourService = class ContourService {\n    constructor(postman, toleranceChecker) {\n        this.postman = postman;\n        this.tolaranceChecker = toleranceChecker;\n    }\n    getFields() {\n        return Contour.FIELDS;\n    }\n    execute(contour) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInTolerance(contour);\n            return yield this.postman.post(contour.fullWpsEndpoint, contour.xmlInput);\n        });\n    }\n    executeV2(contour) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInToleranceV2(contour);\n            return yield this.postman.post(contour.fullWpsEndpoint, contour.xmlInput);\n        });\n    }\n    ensureInputDataIsInTolerance(contour) {\n        this.tolaranceChecker.ensureInputDataIsInTolerance(contour);\n    }\n    ensureInputDataIsInToleranceV2(contour) {\n        this.tolaranceChecker.ensureInputDataIsInToleranceV2(contour);\n    }\n};\nContourService = __decorate([\n    injectable(),\n    __param(0, inject(\"Postman\")),\n    __param(1, inject(\"ContourToleranceChecker\"))\n], ContourService);\nexport default ContourService;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport \"reflect-metadata\";\nimport { container } from \"tsyringe\";\nimport Equidistance from \"../../Shared/domain/Equidistance\";\nimport Latitude from \"../../Shared/domain/Latitude\";\nimport LayerFullname from \"../../Shared/domain/LayerFullname\";\nimport Longitude from \"../../Shared/domain/Longitude\";\nimport Polygon from \"../../Shared/domain/Polygon\";\nimport wpsEndpoint from \"../../Shared/domain/WPSEndpoint\";\nimport PostmanHTTP from \"../../Shared/infrastructure/PostmanHTTP\";\nimport Contour from \"../domain/Contour\";\nimport ContourV2 from \"../domain/ContourV2\";\nimport TurfJSContourToleranceChecker from \"../infraestructure/ContourTurfJSToleranceChecker\";\nimport ContourService from \"./ContourService\";\ncontainer.register(\"Postman\", {\n    useClass: PostmanHTTP,\n});\ncontainer.register(\"ContourToleranceChecker\", {\n    useClass: TurfJSContourToleranceChecker,\n});\nexport default class ContourHandler {\n    constructor(host, mdeLayerFullname, service) {\n        this.host = host;\n        this.mdeLayerFullname = mdeLayerFullname;\n        if (service) {\n            this.service = service;\n        }\n        else {\n            this.service = container.resolve(ContourService);\n        }\n    }\n    getFields() {\n        return this.service.getFields();\n    }\n    execute(longitudeLower, latitudeLower, longitudeUpper, latitudeUpper, equidistance) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contour = new Contour(new Longitude(longitudeLower), new Latitude(latitudeLower), new Longitude(longitudeUpper), new Latitude(latitudeUpper), new Equidistance(equidistance), new wpsEndpoint(this.host), new LayerFullname(this.mdeLayerFullname));\n            return this.service.execute(contour);\n        });\n    }\n    executeV2(polygon, equidistance) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contour = new ContourV2(Polygon.createFromString(polygon), new Equidistance(equidistance), new wpsEndpoint(this.host));\n            return this.service.executeV2(contour);\n        });\n    }\n}\n","export default class ElevationOfPoint {\n    constructor(point, wpsEndpoint, mdeLayerFullname) {\n        this._point = point;\n        this._wpsEndpoint = wpsEndpoint;\n        this._mdeLayerFullname = mdeLayerFullname;\n    }\n    get point() {\n        return this._point;\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    get mdeLayerShortname() {\n        if (this._mdeLayerFullname.value.indexOf(\":\") < 0) {\n            return this._mdeLayerFullname.value;\n        }\n        return this._mdeLayerFullname.value.split(\":\")[1];\n    }\n    get toString() {\n        return this._point.toString;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n    <!-- IntersectionFeatureCollection -->\n    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n          \n          \n              <!-- BufferFeatureCollection -->\n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>features</ows:Identifier>\n                    <wps:Data>\n                      <wps:ComplexData mimeType=\"application/json\"><![CDATA[{\n              \"features\": [\n              { \"type\": \"Feature\", \"properties\": { }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ ${this.toString} ] } }\n              ]\n              }]]></wps:ComplexData>\n                    </wps:Data>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>distance</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0.0000001</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"application/json\">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              <!-- /BufferFeatureCollection -->\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n    \n    \n              <!-- PolygonExtraction -->\n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n                          \n    \n    \n                        <!-- CropCoverage -->\n                        <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n                                <wps:Body>\n                                  <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format=\"image/tiff\"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                                <wps:Body>\n    \n    \n                                    <!-- Buffer -->\n                                    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType=\"application/json\"><![CDATA[{\n                                                    \"geometry\": { \"type\": \"Point\", \"coordinates\": [ ${this.toString} ]\n                                                    } }]]></wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType=\"application/json\">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    <!-- Buffer -->\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType=\"image/tiff\">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        <!-- /CropCoverage -->\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n    \n    \n                          <!-- Buffer -->\n                          <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType=\"application/json\"><![CDATA[{\n                                        \"geometry\": { \"type\": \"Point\", \"coordinates\": [ ${this.toString} ]\n                                        } }]]></wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType=\"application/json\">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          <!-- Buffer -->\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"application/json\">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              <!-- /PolygonExtraction -->\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"application/json\">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    <!-- /IntersectionFeatureCollection -->\n    `;\n    }\n}\nElevationOfPoint.MAX_LENGHT_ALLOWED = 100;\nElevationOfPoint.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"point\"]\n      }\n    ]`);\n","import { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians, } from \"@turf/helpers\";\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians, miles, or kilometers.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name distance\n * @param {Coord | Point} from origin point or coordinate\n * @param {Coord | Point} to destination point or coordinate\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    if (options === void 0) { options = {}; }\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n    var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n        Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), options.units);\n}\nexport default distance;\n","import distance from \"@turf/distance\";\nimport { segmentReduce } from \"@turf/meta\";\n/**\n * Takes a {@link GeoJSON} and measures its length in the specified units, {@link (Multi)Point}'s distance are ignored.\n *\n * @name length\n * @param {Feature<LineString|MultiLineString>} geojson GeoJSON to measure\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=kilometers] can be degrees, radians, miles, or kilometers\n * @returns {number} length of GeoJSON\n * @example\n * var line = turf.lineString([[115, -32], [131, -22], [143, -25], [150, -34]]);\n * var length = turf.length(line, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line];\n * line.properties.distance = length;\n */\nexport default function length(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Calculate distance from 2-vertex line segments\n    return segmentReduce(geojson, function (previousValue, segment) {\n        var coords = segment.geometry.coordinates;\n        return previousValue + distance(coords[0], coords[1], options);\n    }, 0);\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { feature } from \"@turf/helpers\";\nimport length from \"@turf/length\";\nimport { injectable } from \"tsyringe\";\nlet TurfJSElevationOfPointToleranceChecker = class TurfJSElevationOfPointToleranceChecker {\n    ensureInputDataIsInTolerance(elevationOfPoint) {\n        const geometry = JSON.parse(`\n      {\n        \"type\": \"Point\",\n        \"coordinates\": [${elevationOfPoint.point.toString}]\n      }`);\n        const line = feature(geometry);\n        if (length(line, { units: \"kilometers\" }) > 100) {\n            throw RangeError(\"The line length requested must be less than 100km\");\n        }\n    }\n};\nTurfJSElevationOfPointToleranceChecker = __decorate([\n    injectable()\n], TurfJSElevationOfPointToleranceChecker);\nexport default TurfJSElevationOfPointToleranceChecker;\n","export var ElevationOfPointResponseType;\n(function (ElevationOfPointResponseType) {\n    ElevationOfPointResponseType[ElevationOfPointResponseType[\"Point3D\"] = 0] = \"Point3D\";\n    ElevationOfPointResponseType[ElevationOfPointResponseType[\"FeatureCollectionOfPoint\"] = 1] = \"FeatureCollectionOfPoint\";\n})(ElevationOfPointResponseType || (ElevationOfPointResponseType = {}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from \"tsyringe\";\nimport ElevationOfPoint from \"../domain/ElevationOfPoint\";\nimport { ElevationOfPointResponseType } from \"./ElevationOfPointResponseType\";\nlet ElevationOfPointService = class ElevationOfPointService {\n    constructor(postman, toleranceChecker) {\n        this.postman = postman;\n        this.tolaranceChecker = toleranceChecker;\n    }\n    getFields() {\n        return ElevationOfPoint.FIELDS;\n    }\n    execute(elevationOfPoint, responseType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInTolerance(elevationOfPoint);\n            const postmanResponse = yield this.postman.post(elevationOfPoint.wpsEndpoint.value, elevationOfPoint.xmlInput);\n            return this.formatResponse(elevationOfPoint, postmanResponse, responseType);\n        });\n    }\n    ensureInputDataIsInTolerance(elevationOfPoint) {\n        this.tolaranceChecker.ensureInputDataIsInTolerance(elevationOfPoint);\n    }\n    postmanResponseToPoint3D(elevationOfPoint, postmanResponse) {\n        const point2D = elevationOfPoint.toString;\n        return JSON.parse('{ \"type\": \"Point\", \"coordinates\": [' +\n            point2D +\n            \",\" +\n            postmanResponse.features[0][\"properties\"][elevationOfPoint.mdeLayerShortname + \"_value\"] +\n            \"] }\");\n    }\n    postmanResponseToFeatureCollection(elevationOfPoint, postmanResponse) {\n        const point2D = elevationOfPoint.toString;\n        return JSON.parse(`{\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          {\n            \"type\": \"Feature\",\n            \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [\n                ${point2D}\n              ]\n            },\n            \"properties\": {\n              \"height\": ${postmanResponse.features[0][\"properties\"][`${elevationOfPoint.mdeLayerShortname}_value`]}\n            },\n            \"id\": \"0\"\n          }\n        ]\n      }`);\n    }\n    formatResponse(elevationOfPoint, postmanResponse, responseType) {\n        const point2D = elevationOfPoint.toString;\n        if (responseType === ElevationOfPointResponseType.FeatureCollectionOfPoint) {\n            return this.postmanResponseToFeatureCollection(elevationOfPoint, postmanResponse);\n        }\n        return this.postmanResponseToPoint3D(elevationOfPoint, postmanResponse);\n    }\n};\nElevationOfPointService = __decorate([\n    injectable(),\n    __param(0, inject(\"Postman\")),\n    __param(1, inject(\"ElevationOfPointToleranceChecker\"))\n], ElevationOfPointService);\nexport default ElevationOfPointService;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport \"reflect-metadata\";\nimport { container } from \"tsyringe\";\nimport LayerFullname from \"../../Shared/domain/LayerFullname\";\nimport Point from \"../../Shared/domain/Point\";\nimport wpsEndpoint from \"../../Shared/domain/WPSEndpoint\";\nimport PostmanHTTP from \"../../Shared/infrastructure/PostmanHTTP\";\nimport ElevationOfPoint from \"../domain/ElevationOfPoint\";\nimport TurfJSElevationOfPointToleranceChecker from \"../infraestructure/TurfJSElevationOfPointToleranceChecker\";\nimport { ElevationOfPointResponseType } from \"./ElevationOfPointResponseType\";\nimport ElevationOfPointService from \"./ElevationOfPointService\";\ncontainer.register(\"Postman\", {\n    useClass: PostmanHTTP,\n});\ncontainer.register(\"ElevationOfPointToleranceChecker\", {\n    useClass: TurfJSElevationOfPointToleranceChecker,\n});\nexport default class ElevationOfPointHandler {\n    constructor(host, mdeLayerFullname, service) {\n        this.host = host;\n        this.mdeLayerFullname = mdeLayerFullname;\n        if (service) {\n            this.service = service;\n        }\n        else {\n            this.service = container.resolve(ElevationOfPointService);\n        }\n    }\n    getFields() {\n        return this.service.getFields();\n    }\n    execute(point, responseType = ElevationOfPointResponseType.Point3D) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const elevationOfPoint = new ElevationOfPoint(Point.createFromString(point), new wpsEndpoint(this.host), new LayerFullname(this.mdeLayerFullname));\n            return this.service.execute(elevationOfPoint, responseType);\n        });\n    }\n}\n","import Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nimport Point from \"./Point\";\nexport default class Line {\n    constructor(points) {\n        this._value = points;\n    }\n    static createFromString(stringLine) {\n        const points = [];\n        const arrayLine = stringLine\n            .trim()\n            .replace(\"\\n\", \"\")\n            .replace(\"  \", \" \")\n            .replace(\"  \", \" \")\n            .split(\",\");\n        arrayLine.forEach((stringPoint) => {\n            const arrayPoint = stringPoint.trim().split(\" \");\n            points.push(new Point(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1]))));\n        });\n        return new Line(points);\n    }\n    get value() {\n        return this._value;\n    }\n    toString() {\n        const points = [];\n        this.value.forEach((point) => {\n            points.push(point.toString);\n        });\n        return `[${points.join(\"],[\")}]`;\n    }\n    toProcessString() {\n        const points = [];\n        this.value.forEach((point) => {\n            points.push(point.toProcessString());\n        });\n        return `${points.join(\",\")}`;\n    }\n    subLine(maxIndex) {\n        const points = [];\n        this.value.forEach(function (point, actualIndex) {\n            if (actualIndex <= maxIndex) {\n                points.push(point.toString);\n            }\n        });\n        return `[${points.join(\"],[\")}]`;\n    }\n}\n","import { degreesToRadians, radiansToDegrees } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\n/**\n * Takes two {@link Point|points} and finds the geographic bearing between them,\n * i.e. the angle measured in degrees from the north line (0 degrees)\n *\n * @name bearing\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.final=false] calculates the final bearing if true\n * @returns {number} bearing in decimal degrees, between -180 and 180 degrees (positive clockwise)\n * @example\n * var point1 = turf.point([-75.343, 39.984]);\n * var point2 = turf.point([-75.534, 39.123]);\n *\n * var bearing = turf.bearing(point1, point2);\n *\n * //addToMap\n * var addToMap = [point1, point2]\n * point1.properties['marker-color'] = '#f00'\n * point2.properties['marker-color'] = '#0f0'\n * point1.properties.bearing = bearing\n */\nexport default function bearing(start, end, options) {\n    if (options === void 0) { options = {}; }\n    // Reverse calculation\n    if (options.final === true) {\n        return calculateFinalBearing(start, end);\n    }\n    var coordinates1 = getCoord(start);\n    var coordinates2 = getCoord(end);\n    var lon1 = degreesToRadians(coordinates1[0]);\n    var lon2 = degreesToRadians(coordinates2[0]);\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n    var a = Math.sin(lon2 - lon1) * Math.cos(lat2);\n    var b = Math.cos(lat1) * Math.sin(lat2) -\n        Math.sin(lat1) * Math.cos(lat2) * Math.cos(lon2 - lon1);\n    return radiansToDegrees(Math.atan2(a, b));\n}\n/**\n * Calculates Final Bearing\n *\n * @private\n * @param {Coord} start starting Point\n * @param {Coord} end ending Point\n * @returns {number} bearing\n */\nfunction calculateFinalBearing(start, end) {\n    // Swap start & end\n    var bear = bearing(end, start);\n    bear = (bear + 180) % 360;\n    return bear;\n}\n","// http://en.wikipedia.org/wiki/Haversine_formula\n// http://www.movable-type.co.uk/scripts/latlong.html\nimport { degreesToRadians, lengthToRadians, point, radiansToDegrees, } from \"@turf/helpers\";\nimport { getCoord } from \"@turf/invariant\";\n/**\n * Takes a {@link Point} and calculates the location of a destination point given a distance in\n * degrees, radians, miles, or kilometers; and bearing in degrees.\n * This uses the [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula) to account for global curvature.\n *\n * @name destination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the origin point\n * @param {number} bearing ranging from -180 to 180\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] miles, kilometers, degrees, or radians\n * @param {Object} [options.properties={}] Translate properties to Point\n * @returns {Feature<Point>} destination point\n * @example\n * var point = turf.point([-75.343, 39.984]);\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.destination(point, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [point, destination]\n * destination.properties['marker-color'] = '#f00';\n * point.properties['marker-color'] = '#0f0';\n */\nexport default function destination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    // Handle input\n    var coordinates1 = getCoord(origin);\n    var longitude1 = degreesToRadians(coordinates1[0]);\n    var latitude1 = degreesToRadians(coordinates1[1]);\n    var bearingRad = degreesToRadians(bearing);\n    var radians = lengthToRadians(distance, options.units);\n    // Main\n    var latitude2 = Math.asin(Math.sin(latitude1) * Math.cos(radians) +\n        Math.cos(latitude1) * Math.sin(radians) * Math.cos(bearingRad));\n    var longitude2 = longitude1 +\n        Math.atan2(Math.sin(bearingRad) * Math.sin(radians) * Math.cos(latitude1), Math.cos(radians) - Math.sin(latitude1) * Math.sin(latitude2));\n    var lng = radiansToDegrees(longitude2);\n    var lat = radiansToDegrees(latitude2);\n    return point([lng, lat], options.properties);\n}\n","import bearing from \"@turf/bearing\";\nimport destination from \"@turf/destination\";\nimport measureDistance from \"@turf/distance\";\nimport { point } from \"@turf/helpers\";\nimport { getGeom } from \"@turf/invariant\";\n/**\n * Takes a {@link LineString} and returns a {@link Point} at a specified distance along the line.\n *\n * @name along\n * @param {Feature<LineString>} line input line\n * @param {number} distance distance along the line\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units=\"kilometers\"] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} Point `distance` `units` along the line\n * @example\n * var line = turf.lineString([[-83, 30], [-84, 36], [-78, 41]]);\n * var options = {units: 'miles'};\n *\n * var along = turf.along(line, 200, options);\n *\n * //addToMap\n * var addToMap = [along, line]\n */\nexport default function along(line, distance, options) {\n    if (options === void 0) { options = {}; }\n    // Get Coords\n    var geom = getGeom(line);\n    var coords = geom.coordinates;\n    var travelled = 0;\n    for (var i = 0; i < coords.length; i++) {\n        if (distance >= travelled && i === coords.length - 1) {\n            break;\n        }\n        else if (travelled >= distance) {\n            var overshot = distance - travelled;\n            if (!overshot) {\n                return point(coords[i]);\n            }\n            else {\n                var direction = bearing(coords[i], coords[i - 1]) - 180;\n                var interpolated = destination(coords[i], overshot, direction, options);\n                return interpolated;\n            }\n        }\n        else {\n            travelled += measureDistance(coords[i], coords[i + 1], options);\n        }\n    }\n    return point(coords[coords.length - 1]);\n}\n","export default class MultiPointInLine {\n    constructor() {\n        this._points = [];\n    }\n    add(point) {\n        this._points.push(point);\n        this.reorderPointsByPositionInLine();\n    }\n    reorderPointsByPositionInLine() {\n        this._points.sort((firstPoint, secondPoint) => {\n            if (firstPoint.positionInLine < secondPoint.positionInLine) {\n                return -1;\n            }\n            if (firstPoint.positionInLine > secondPoint.positionInLine) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    get points() {\n        return this._points;\n    }\n    toString() {\n        const pointsString = [];\n        this._points.forEach((point) => {\n            pointsString.push(point.toString);\n        });\n        return `[${pointsString.join(\"],[\")}]`;\n    }\n    toJSONFeatureCollection() {\n        const pointsString = [];\n        this._points.forEach((point, index) => {\n            pointsString.push(`{ \"type\": \"Feature\", \"properties\": { \"index\": ${index} }, \"geometry\": { \"type\": \"MultiPoint\", \"coordinates\": [ [ ${point.toString}  ] ] } }`);\n        });\n        return `{\n      \"type\": \"FeatureCollection\",\n      \"name\": \"multipoint\",\n      \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n      \"features\": [\n        ${pointsString.join(\",\")}\n      ]\n    }`;\n    }\n}\n","import Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nimport Point from \"./Point\";\nexport default class PointInLine extends Point {\n    constructor(longitude, latitude, positionInLine) {\n        super(longitude, latitude);\n        this._positionInLine = positionInLine;\n    }\n    get positionInLine() {\n        return this._positionInLine;\n    }\n    static create(stringPoint, positionInLine) {\n        const arrayPoint = stringPoint.split(\" \");\n        return new PointInLine(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1])), positionInLine);\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar TurfJSLineToPointsInterval_1;\nimport along from \"@turf/along\";\nimport { feature } from \"@turf/helpers\";\nimport length from \"@turf/length\";\nimport { injectable } from \"tsyringe\";\nimport MultiPointInLine from \"../domain/MultiPointInLine\";\nimport PointInLine from \"../domain/PointInLine\";\nlet TurfJSLineToPointsInterval = TurfJSLineToPointsInterval_1 = class TurfJSLineToPointsInterval {\n    execute(line) {\n        const geometry = JSON.parse(`\n      {\n        \"type\": \"LineString\",\n        \"coordinates\": [${line.toString()}]\n      }`);\n        const lineFeature = feature(geometry);\n        const lineLenght = length(lineFeature, { units: \"meters\" });\n        const distanceBetweenPoints = this.calculateDistanceBetweenPoints(lineLenght);\n        let point;\n        const points = new MultiPointInLine();\n        if (distanceBetweenPoints > 0) {\n            this.getIntermediatePoints(lineFeature, lineLenght, distanceBetweenPoints).forEach((pointInLine) => {\n                points.add(pointInLine);\n            });\n        }\n        else {\n            points.add(this.getFirstNode(line));\n        }\n        this.getAllNodesExceptFirst(line).forEach((pointInLine) => {\n            points.add(pointInLine);\n        });\n        return points;\n    }\n    calculateDistanceBetweenPoints(lineLenght) {\n        return Math.floor(lineLenght / TurfJSLineToPointsInterval_1.INTERMEDIATE_POINTS_IN_LINE);\n    }\n    getIntermediatePoints(lineFeature, lineLenght, distanceBetweenPoints) {\n        let point;\n        const pointsInLine = [];\n        for (let step = 0; step < lineLenght; step += distanceBetweenPoints) {\n            point = along(lineFeature, step, { units: \"meters\" });\n            pointsInLine.push(PointInLine.create(`${point.geometry.coordinates[0]} ${point.geometry.coordinates[1]}`, step));\n        }\n        return pointsInLine;\n    }\n    getFirstNode(line) {\n        const geometry = JSON.parse(`\n    {\n      \"type\": \"LineString\",\n      \"coordinates\": [${line.subLine(0)}]\n    }`);\n        const lineFeature = feature(geometry);\n        return PointInLine.create(`${line.value[0].longitude.value} ${line.value[0].latitude.value}`, length(lineFeature, { units: \"meters\" }));\n    }\n    getAllNodesExceptFirst(line) {\n        const pointsInLine = [];\n        for (let pointIndex = 1; pointIndex < line.value.length; pointIndex++) {\n            const geometry = JSON.parse(`\n      {\n        \"type\": \"LineString\",\n        \"coordinates\": [${line.subLine(pointIndex)}]\n      }`);\n            const lineFeature = feature(geometry);\n            pointsInLine.push(PointInLine.create(`${line.value[pointIndex].longitude.value} ${line.value[pointIndex].latitude.value}`, length(lineFeature, { units: \"meters\" })));\n        }\n        return pointsInLine;\n    }\n};\nTurfJSLineToPointsInterval.INTERMEDIATE_POINTS_IN_LINE = 100;\nTurfJSLineToPointsInterval = TurfJSLineToPointsInterval_1 = __decorate([\n    injectable()\n], TurfJSLineToPointsInterval);\nexport default TurfJSLineToPointsInterval;\n","export default class ElevationProfile {\n    constructor(line, linePoints, wpsEndpoint, mdeLayerFullname) {\n        this._line = line;\n        this._linePoints = linePoints;\n        this._wpsEndpoint = wpsEndpoint;\n        this._mdeLayerFullname = mdeLayerFullname;\n    }\n    get line() {\n        return this._line;\n    }\n    get linePoints() {\n        return this._linePoints;\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    get mdeLayerFullname() {\n        return this._mdeLayerFullname;\n    }\n    get mdeLayerShortname() {\n        if (this._mdeLayerFullname.value.indexOf(\":\") < 0) {\n            return this._mdeLayerFullname.value;\n        }\n        return this._mdeLayerFullname.value.split(\":\")[1];\n    }\n    get fullWpsEndpoint() {\n        return `${this.wpsEndpoint.value}&request=Execute&identifier=gs:IntersectionFeatureCollection`;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n    <!-- IntersectionFeatureCollection -->\n    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n          \n          \n    <!-- BufferFeatureCollection -->\n    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n      <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>features</ows:Identifier>\n          <wps:Data>\n            <wps:ComplexData mimeType=\"application/json\"><![CDATA[\n              ${this._linePoints.toJSONFeatureCollection()}\n            ]]></wps:ComplexData>\n          </wps:Data>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>distance</ows:Identifier>\n          <wps:Data>\n            <wps:LiteralData>0.0000001</wps:LiteralData>\n          </wps:Data>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"application/json\">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    <!-- /BufferFeatureCollection -->\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n    \n    \n              <!-- PolygonExtraction -->\n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n                          \n    \n    \n                        <!-- CropCoverage -->\n                        <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n                                <wps:Body>\n                                  <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format=\"image/tiff\"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                                <wps:Body>\n    \n    \n                                    <!-- Buffer -->\n                                    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType=\"application/json\">\n                                                      <![CDATA[{\n                                                        \"geometry\": { \"type\": \"MultiPoint\", \"coordinates\": [${this._linePoints.toString()}]\n                                                      } }]]>\n                                                    </wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType=\"application/json\">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    <!-- Buffer -->\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType=\"image/tiff\">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        <!-- /CropCoverage -->\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n    \n    \n                          <!-- Buffer -->\n                          <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType=\"application/json\">\n                                          <![CDATA[{\n                                            \"geometry\": { \"type\": \"MultiPoint\", \"coordinates\": [${this._linePoints.toString()}]\n                                          } }]]>\n                                        </wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType=\"application/json\">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          <!-- Buffer -->\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"application/json\">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              <!-- /PolygonExtraction -->\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"application/json\">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    <!-- /IntersectionFeatureCollection -->`;\n    }\n}\nElevationProfile.MAX_LENGHT_ALLOWED = 100;\nElevationProfile.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"line\"],\n        \"points\": [\"ne\", \"sw\"]\n      }\n    ]`);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { injectable } from \"tsyringe\";\nlet TurfJSElevationProfileToleranceChecker = class TurfJSElevationProfileToleranceChecker {\n    ensureInputDataIsInTolerance(elevationProfile) {\n        // const geometry = JSON.parse(`\n        //   {\n        //     \"type\": \"LineString\",\n        //     \"coordinates\": [${elevationProfile.line.toString()}]\n        //   }`);\n        // const line = feature(geometry);\n        // if (length(line, { units: \"kilometers\" }) > 100) {\n        //   throw RangeError(\"The line length requested must be less than 100km\");\n        // }\n    }\n};\nTurfJSElevationProfileToleranceChecker = __decorate([\n    injectable()\n], TurfJSElevationProfileToleranceChecker);\nexport default TurfJSElevationProfileToleranceChecker;\n","export var ElevationProfileResponseType;\n(function (ElevationProfileResponseType) {\n    ElevationProfileResponseType[ElevationProfileResponseType[\"LineString3D\"] = 0] = \"LineString3D\";\n    ElevationProfileResponseType[ElevationProfileResponseType[\"FeatureCollectionOfLines\"] = 1] = \"FeatureCollectionOfLines\";\n})(ElevationProfileResponseType || (ElevationProfileResponseType = {}));\n","import NumberValueObject from \"./NumberValueObject\";\nexport default class Height extends NumberValueObject {\n    constructor(height) {\n        super(height);\n    }\n}\n","import Height from \"./Height\";\nimport Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nexport default class Point3D {\n    constructor(longitude, latitude, height) {\n        this._longitude = longitude;\n        this._latitude = latitude;\n        this._height = height;\n    }\n    get value() {\n        return [this._longitude, this._latitude, this._height];\n    }\n    get longitude() {\n        return this._longitude;\n    }\n    get latitude() {\n        return this._latitude;\n    }\n    get height() {\n        return this._height;\n    }\n    get toString() {\n        return `${this._longitude.value},${this._latitude.value},${this._height.value}`;\n    }\n    get toString2D() {\n        return `${this._longitude.value},${this._latitude.value}`;\n    }\n    toProcessString() {\n        return `${this._longitude.value} ${this._latitude.value} ${this._height.value}`;\n    }\n    static createFromString(stringPoint) {\n        const arrayPoint = stringPoint.split(\" \");\n        return new Point3D(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1])), new Height(parseFloat(arrayPoint[2])));\n    }\n}\n","import Latitude from \"./Latitude\";\nimport Longitude from \"./Longitude\";\nimport Point3D from \"./Point3D\";\nexport default class Line3D {\n    constructor(points) {\n        this._value = points;\n    }\n    static createFromString(stringLine) {\n        const points = [];\n        const arrayLine = stringLine\n            .trim()\n            .replace(\"\\n\", \"\")\n            .replace(\"  \", \" \")\n            .replace(\"  \", \" \")\n            .split(\",\");\n        arrayLine.forEach((stringPoint) => {\n            const arrayPoint = stringPoint.trim().split(\" \");\n            points.push(new Point3D(new Longitude(parseFloat(arrayPoint[0])), new Latitude(parseFloat(arrayPoint[1])), new Latitude(parseFloat(arrayPoint[2]))));\n        });\n        return new Line3D(points);\n    }\n    get value() {\n        return this._value;\n    }\n    toString() {\n        const points = [];\n        this.value.forEach((point) => {\n            points.push(point.toString);\n        });\n        return `[${points.join(\"],[\")}]`;\n    }\n    toProcessString() {\n        const points = [];\n        this.value.forEach((point) => {\n            points.push(point.toProcessString());\n        });\n        return `${points.join(\",\")}`;\n    }\n    toLineString3D() {\n        return '{ \"type\": \"LineString\", \"coordinates\": [' + this.toString() + \"] }\";\n    }\n    toFeatureCollection() {\n        const features = [];\n        for (let index = 1; index < this._value.length; index++) {\n            features[index - 1] = `{\n        \"type\": \"Feature\",\n        \"geometry\": {\n          \"type\": \"MultiLineString\",\n          \"coordinates\": [\n            [\n              [ ${this._value[index - 1].toString2D} ], [ ${this._value[index].toString2D} ]\n            ]\n          ]\n        },\n        \"properties\": {\n          \"index\": ${index},\n          \"initial_height\": ${this._value[index - 1].height.value},\n          \"final_height\": ${this._value[index].height.value}\n        },\n        \"id\": \"${index - 1}\"\n      }`;\n        }\n        return `{\n      \"type\": \"FeatureCollection\",\n      \"features\": [ ${features.join(\",\")} ]\n    }`;\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from \"tsyringe\";\nimport Height from \"../../Shared/domain/Height\";\nimport Line3D from \"../../Shared/domain/Line3D\";\nimport Point3D from \"../../Shared/domain/Point3D\";\nimport ElevationProfile from \"../domain/ElevationProfile\";\nimport { ElevationProfileResponseType } from \"./ElevationProfileResponseType\";\nlet ElevationProfileService = class ElevationProfileService {\n    constructor(postman, toleranceChecker) {\n        this.postman = postman;\n        this.tolaranceChecker = toleranceChecker;\n    }\n    getFields() {\n        return ElevationProfile.FIELDS;\n    }\n    execute(elevationProfile, responseType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInTolerance(elevationProfile);\n            const postmanResponse = yield this.postman.post(elevationProfile.fullWpsEndpoint, elevationProfile.xmlInput);\n            const line3D = this.generateLine3DFromResponse(elevationProfile, postmanResponse);\n            return this.formatResponse(line3D, responseType);\n        });\n    }\n    ensureInputDataIsInTolerance(elevationProfile) {\n        this.tolaranceChecker.ensureInputDataIsInTolerance(elevationProfile);\n    }\n    generateLine3DFromResponse(elevationProfile, postmanResponse) {\n        const featureCollection = postmanResponse;\n        const points3D = [];\n        //Reorder the incomming features\n        featureCollection.features.sort((firstFeature, secondFeature) => {\n            if (firstFeature.properties.feature_index <\n                secondFeature.properties.feature_index) {\n                return -1;\n            }\n            if (firstFeature.properties.feature_index >\n                secondFeature.properties.feature_index) {\n                return 1;\n            }\n            return 0;\n        });\n        //Merge users points with incomming points\n        elevationProfile.linePoints.points.forEach(function (point, index) {\n            for (const featureKey in featureCollection.features) {\n                if (featureCollection.features[featureKey].properties.feature_index ==\n                    index) {\n                    points3D.push(new Point3D(point.longitude, point.latitude, new Height(featureCollection.features[index][\"properties\"][elevationProfile.mdeLayerShortname + \"_value\"])));\n                    break;\n                }\n            }\n        });\n        if (points3D.length == 1) {\n            const point = elevationProfile.linePoints.points[elevationProfile.linePoints.points.length - 1];\n            points3D.push(new Point3D(point.longitude, point.latitude, new Height(featureCollection.features[0][\"properties\"][elevationProfile.mdeLayerShortname + \"_value\"])));\n        }\n        return new Line3D(points3D);\n    }\n    formatResponse(line3D, responseType) {\n        if (responseType === ElevationProfileResponseType.FeatureCollectionOfLines) {\n            return JSON.parse(line3D.toFeatureCollection());\n        }\n        return JSON.parse(line3D.toLineString3D());\n    }\n};\nElevationProfileService = __decorate([\n    injectable(),\n    __param(0, inject(\"Postman\")),\n    __param(1, inject(\"ElevationProfileToleranceChecker\"))\n], ElevationProfileService);\nexport default ElevationProfileService;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport \"reflect-metadata\";\nimport { container, inject, injectable } from \"tsyringe\";\nimport LayerFullname from \"../../Shared/domain/LayerFullname\";\nimport Line from \"../../Shared/domain/Line\";\nimport wpsEndpoint from \"../../Shared/domain/WPSEndpoint\";\nimport PostmanHTTP from \"../../Shared/infrastructure/PostmanHTTP\";\nimport TurfJSLineToPointsInterval from \"../../Shared/infrastructure/TurfJSLineToPointsInterval\";\nimport ElevationProfile from \"../domain/ElevationProfile\";\nimport TurfJSElevationProfileToleranceChecker from \"../infraestructure/TurfJSElevationProfileToleranceChecker\";\nimport { ElevationProfileResponseType } from \"./ElevationProfileResponseType\";\nimport ElevationProfileService from \"./ElevationProfileService\";\ncontainer.register(\"Postman\", {\n    useClass: PostmanHTTP,\n});\ncontainer.register(\"ElevationProfileToleranceChecker\", {\n    useClass: TurfJSElevationProfileToleranceChecker,\n});\ncontainer.register(\"LineToPointsInterval\", {\n    useClass: TurfJSLineToPointsInterval,\n});\nlet ElevationProfileHandler = class ElevationProfileHandler {\n    constructor(host, mdeLayerFullname, lineToPoint, service) {\n        this.host = host;\n        this.mdeLayerFullname = mdeLayerFullname;\n        // this.lineToPoint = lineToPoint;\n        this.lineToPoint = new TurfJSLineToPointsInterval();\n        if (service) {\n            this.service = service;\n        }\n        else {\n            this.service = container.resolve(ElevationProfileService);\n        }\n    }\n    getFields() {\n        return this.service.getFields();\n    }\n    execute(lineString, responseType = ElevationProfileResponseType.LineString3D) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const line = Line.createFromString(lineString);\n            const elevationProfile = new ElevationProfile(line, this.lineToPoint.execute(line), new wpsEndpoint(this.host), new LayerFullname(this.mdeLayerFullname));\n            return this.service.execute(elevationProfile, responseType);\n        });\n    }\n};\nElevationProfileHandler = __decorate([\n    injectable(),\n    __param(2, inject(\"LineToPointsInterval\"))\n], ElevationProfileHandler);\nexport default ElevationProfileHandler;\n","export default class ElevationProfile {\n    constructor(line, linePoints, wpsEndpoint, mdeLayerFullname) {\n        this._line = line;\n        this._linePoints = linePoints;\n        this._wpsEndpoint = wpsEndpoint;\n        this._mdeLayerFullname = mdeLayerFullname;\n    }\n    get line() {\n        return this._line;\n    }\n    get linePoints() {\n        return this._linePoints;\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    get mdeLayerFullname() {\n        return this._mdeLayerFullname;\n    }\n    get mdeLayerShortname() {\n        if (this._mdeLayerFullname.value.indexOf(\":\") < 0) {\n            return this._mdeLayerFullname.value;\n        }\n        return this._mdeLayerFullname.value.split(\":\")[1];\n    }\n    get fullWpsEndpoint() {\n        return `${this.wpsEndpoint.value}&request=Execute&identifier=gs:IntersectionFeatureCollection`;\n    }\n    fullWmsEndpoint(point) {\n        return `${this.wpsEndpoint.value}\n      &REQUEST=GetFeatureInfo\n      &QUERY_LAYERS=${this._mdeLayerFullname.value}\n      &LAYERS=${this._mdeLayerFullname.value}\n      &INFO_FORMAT=application%2Fjson\n      &FEATURE_COUNT=1\n      &X=1\n      &Y=1\n      &SRS=EPSG%3A4326\n      &WIDTH=1\n      &HEIGHT=1\n      &BBOX=${point.longitude.value}%2C${point.latitude.value}%2C${point.moveLongitude.value}%2C${point.moveLatitude.value}`;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n\n    <!-- IntersectionFeatureCollection -->\n    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n      <ows:Identifier>gs:IntersectionFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>first feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n          \n          \n    <!-- BufferFeatureCollection -->\n    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n      <ows:Identifier>vec:BufferFeatureCollection</ows:Identifier>\n      <wps:DataInputs>\n        <wps:Input>\n          <ows:Identifier>features</ows:Identifier>\n          <wps:Data>\n            <wps:ComplexData mimeType=\"application/json\"><![CDATA[\n              ${this._linePoints.toJSONFeatureCollection()}\n            ]]></wps:ComplexData>\n          </wps:Data>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>distance</ows:Identifier>\n          <wps:Data>\n            <wps:LiteralData>0.0000001</wps:LiteralData>\n          </wps:Data>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"application/json\">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    <!-- /BufferFeatureCollection -->\n    \n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n          <ows:Identifier>second feature collection</ows:Identifier>\n          <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n            <wps:Body>\n    \n    \n              <!-- PolygonExtraction -->\n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                <ows:Identifier>ras:PolygonExtraction</ows:Identifier>\n                <wps:DataInputs>\n                  <wps:Input>\n                    <ows:Identifier>data</ows:Identifier>\n                    <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n                          \n    \n    \n                        <!-- CropCoverage -->\n                        <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                          <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                          <wps:DataInputs>\n                            <wps:Input>\n                              <ows:Identifier>coverage</ows:Identifier>\n                              <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n                                <wps:Body>\n                                  <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n                                    <ows:Identifier>${this._mdeLayerFullname.value}</ows:Identifier>\n                                    <wcs:DomainSubset>\n                                      <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                                        <ows:LowerCorner>-74.000000946 -55.666705466</ows:LowerCorner>\n                                        <ows:UpperCorner>-53.499547847 -21.666460109</ows:UpperCorner>\n                                      </ows:BoundingBox>\n                                    </wcs:DomainSubset>\n                                    <wcs:Output format=\"image/tiff\"/>\n                                  </wcs:GetCoverage>\n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                            <wps:Input>\n                              <ows:Identifier>cropShape</ows:Identifier>\n                              <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                                <wps:Body>\n    \n    \n                                    <!-- Buffer -->\n                                    <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                            <ows:Identifier>geo:buffer</ows:Identifier>\n                                            <wps:DataInputs>\n                                                <wps:Input>\n                                                <ows:Identifier>geom</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:ComplexData mimeType=\"application/json\">\n                                                      <![CDATA[{\n                                                        \"geometry\": { \"type\": \"MultiPoint\", \"coordinates\": [${this._linePoints.toString()}]\n                                                      } }]]>\n                                                    </wps:ComplexData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>distance</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>0.003</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                                <wps:Input>\n                                                <ows:Identifier>capStyle</ows:Identifier>\n                                                <wps:Data>\n                                                    <wps:LiteralData>Square</wps:LiteralData>\n                                                </wps:Data>\n                                                </wps:Input>\n                                            </wps:DataInputs>\n                                            <wps:ResponseForm>\n                                                <wps:RawDataOutput mimeType=\"application/json\">\n                                                <ows:Identifier>result</ows:Identifier>\n                                                </wps:RawDataOutput>\n                                            </wps:ResponseForm>\n                                    </wps:Execute>\n                                    <!-- Buffer -->\n    \n                                </wps:Body>\n                              </wps:Reference>\n                            </wps:Input>\n                          </wps:DataInputs>\n                          <wps:ResponseForm>\n                            <wps:RawDataOutput mimeType=\"image/tiff\">\n                              <ows:Identifier>result</ows:Identifier>\n                            </wps:RawDataOutput>\n                          </wps:ResponseForm>\n                        </wps:Execute>\n                        <!-- /CropCoverage -->\n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>roi</ows:Identifier>\n                    <wps:Reference mimeType=\"application/json\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                      <wps:Body>\n    \n    \n                          <!-- Buffer -->\n                          <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                                <ows:Identifier>geo:buffer</ows:Identifier>\n                                <wps:DataInputs>\n                                    <wps:Input>\n                                    <ows:Identifier>geom</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:ComplexData mimeType=\"application/json\">\n                                          <![CDATA[{\n                                            \"geometry\": { \"type\": \"MultiPoint\", \"coordinates\": [${this._linePoints.toString()}]\n                                          } }]]>\n                                        </wps:ComplexData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>distance</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>0.001</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                    <wps:Input>\n                                    <ows:Identifier>capStyle</ows:Identifier>\n                                    <wps:Data>\n                                        <wps:LiteralData>Square</wps:LiteralData>\n                                    </wps:Data>\n                                    </wps:Input>\n                                </wps:DataInputs>\n                                <wps:ResponseForm>\n                                    <wps:RawDataOutput mimeType=\"application/json\">\n                                    <ows:Identifier>result</ows:Identifier>\n                                    </wps:RawDataOutput>\n                                </wps:ResponseForm>\n                          </wps:Execute>\n                          <!-- Buffer -->\n    \n    \n    \n                      </wps:Body>\n                    </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                    <ows:Identifier>band</ows:Identifier>\n                    <wps:Data>\n                      <wps:LiteralData>0</wps:LiteralData>\n                    </wps:Data>\n                  </wps:Input>\n                </wps:DataInputs>\n                <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"application/json\">\n                    <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                </wps:ResponseForm>\n              </wps:Execute>\n              <!-- /PolygonExtraction -->\n    \n    \n            </wps:Body>\n          </wps:Reference>\n        </wps:Input>\n      </wps:DataInputs>\n      <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"application/json\">\n          <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n      </wps:ResponseForm>\n    </wps:Execute>\n    <!-- /IntersectionFeatureCollection -->`;\n    }\n}\nElevationProfile.MAX_LENGHT_ALLOWED = 100;\nElevationProfile.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"line\"],\n        \"points\": [\"ne\", \"sw\"]\n      }\n    ]`);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { injectable } from \"tsyringe\";\nlet TurfJSElevationProfileToleranceChecker = class TurfJSElevationProfileToleranceChecker {\n    ensureInputDataIsInTolerance(elevationProfile) {\n        // const geometry = JSON.parse(`\n        //   {\n        //     \"type\": \"LineString\",\n        //     \"coordinates\": [${elevationProfile.line.toString()}]\n        //   }`);\n        // const line = feature(geometry);\n        // if (length(line, { units: \"kilometers\" }) > 100) {\n        //   throw RangeError(\"The line length requested must be less than 100km\");\n        // }\n    }\n};\nTurfJSElevationProfileToleranceChecker = __decorate([\n    injectable()\n], TurfJSElevationProfileToleranceChecker);\nexport default TurfJSElevationProfileToleranceChecker;\n","export var ElevationProfileResponseType;\n(function (ElevationProfileResponseType) {\n    ElevationProfileResponseType[ElevationProfileResponseType[\"LineString3D\"] = 0] = \"LineString3D\";\n    ElevationProfileResponseType[ElevationProfileResponseType[\"FeatureCollectionOfLines\"] = 1] = \"FeatureCollectionOfLines\";\n})(ElevationProfileResponseType || (ElevationProfileResponseType = {}));\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from \"tsyringe\";\nimport Height from \"../../Shared/domain/Height\";\nimport Line3D from \"../../Shared/domain/Line3D\";\nimport Point3D from \"../../Shared/domain/Point3D\";\nimport ElevationProfile from \"../domain/ElevationProfile\";\nimport { ElevationProfileResponseType } from \"./ElevationProfileResponseType\";\nlet ElevationProfileService = class ElevationProfileService {\n    constructor(postman, toleranceChecker) {\n        this.postman = postman;\n        this.tolaranceChecker = toleranceChecker;\n    }\n    getFields() {\n        return ElevationProfile.FIELDS;\n    }\n    execute(elevationProfile, responseType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInTolerance(elevationProfile);\n            let postmanResponse;\n            // const points3D: Point3D[] = [];\n            const promises = elevationProfile.linePoints.points.map((point) => __awaiter(this, void 0, void 0, function* () {\n                postmanResponse = yield this.postman.get(elevationProfile.fullWmsEndpoint(point));\n                return new Point3D(point.longitude, point.latitude, new Height(Number(Object.values(postmanResponse.features[0].properties)[0])));\n            }));\n            const points3D = yield Promise.all(promises);\n            // return JSON.parse(new Line3D(points3D).toLineString3D());\n            return this.formatResponse(points3D, responseType);\n        });\n    }\n    ensureInputDataIsInTolerance(elevationProfile) {\n        this.tolaranceChecker.ensureInputDataIsInTolerance(elevationProfile);\n    }\n    generateLine3DFromResponse(elevationProfile, postmanResponse) {\n        const featureCollection = postmanResponse;\n        const points3D = [];\n        //Reorder the incomming features\n        featureCollection.features.sort((firstFeature, secondFeature) => {\n            if (firstFeature.properties.feature_index <\n                secondFeature.properties.feature_index) {\n                return -1;\n            }\n            if (firstFeature.properties.feature_index >\n                secondFeature.properties.feature_index) {\n                return 1;\n            }\n            return 0;\n        });\n        //Merge users points with incomming points\n        elevationProfile.linePoints.points.forEach(function (point, index) {\n            for (const featureKey in featureCollection.features) {\n                if (featureCollection.features[featureKey].properties.feature_index ==\n                    index) {\n                    points3D.push(new Point3D(point.longitude, point.latitude, new Height(featureCollection.features[index][\"properties\"][elevationProfile.mdeLayerShortname + \"_value\"])));\n                    break;\n                }\n            }\n        });\n        if (points3D.length == 1) {\n            const point = elevationProfile.linePoints.points[elevationProfile.linePoints.points.length - 1];\n            points3D.push(new Point3D(point.longitude, point.latitude, new Height(featureCollection.features[0][\"properties\"][elevationProfile.mdeLayerShortname + \"_value\"])));\n        }\n        return new Line3D(points3D);\n    }\n    formatResponse(points3D, responseType) {\n        if (responseType === ElevationProfileResponseType.FeatureCollectionOfLines) {\n            return JSON.parse(new Line3D(points3D).toFeatureCollection());\n        }\n        return JSON.parse(new Line3D(points3D).toLineString3D());\n    }\n};\nElevationProfileService = __decorate([\n    injectable(),\n    __param(0, inject(\"Postman\")),\n    __param(1, inject(\"ElevationProfileToleranceChecker\"))\n], ElevationProfileService);\nexport default ElevationProfileService;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport \"reflect-metadata\";\nimport { container, inject, injectable } from \"tsyringe\";\nimport LayerFullname from \"../../Shared/domain/LayerFullname\";\nimport Line from \"../../Shared/domain/Line\";\nimport wpsEndpoint from \"../../Shared/domain/WPSEndpoint\";\nimport PostmanHTTP from \"../../Shared/infrastructure/PostmanHTTP\";\nimport TurfJSLineToPointsInterval from \"../../Shared/infrastructure/TurfJSLineToPointsInterval\";\nimport ElevationProfile from \"../domain/ElevationProfile\";\nimport TurfJSElevationProfileToleranceChecker from \"../infraestructure/TurfJSElevationProfileToleranceChecker\";\nimport { ElevationProfileResponseType } from \"./ElevationProfileResponseType\";\nimport ElevationProfileService from \"./ElevationProfileService\";\ncontainer.register(\"Postman\", {\n    useClass: PostmanHTTP,\n});\ncontainer.register(\"ElevationProfileToleranceChecker\", {\n    useClass: TurfJSElevationProfileToleranceChecker,\n});\ncontainer.register(\"LineToPointsInterval\", {\n    useClass: TurfJSLineToPointsInterval,\n});\nlet ElevationProfileGetFeatureInfoHandler = class ElevationProfileGetFeatureInfoHandler {\n    constructor(host, mdeLayerFullname, lineToPoint, service) {\n        this.host = host;\n        this.mdeLayerFullname = mdeLayerFullname;\n        // this.lineToPoint = lineToPoint;\n        this.lineToPoint = new TurfJSLineToPointsInterval();\n        if (service) {\n            this.service = service;\n        }\n        else {\n            this.service = container.resolve(ElevationProfileService);\n        }\n    }\n    getFields() {\n        return this.service.getFields();\n    }\n    execute(lineString, responseType = ElevationProfileResponseType.LineString3D) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const line = Line.createFromString(lineString);\n            const elevationProfile = new ElevationProfile(line, this.lineToPoint.execute(line), new wpsEndpoint(this.host), new LayerFullname(this.mdeLayerFullname));\n            return this.service.execute(elevationProfile, responseType);\n        });\n    }\n};\nElevationProfileGetFeatureInfoHandler = __decorate([\n    injectable(),\n    __param(2, inject(\"LineToPointsInterval\"))\n], ElevationProfileGetFeatureInfoHandler);\nexport default ElevationProfileGetFeatureInfoHandler;\n","export default class HealthCheck {\n    status() {\n        return \"Ok\";\n    }\n}\n","import NumberValueObject from \"./NumberValueObject\";\nexport default class Level extends NumberValueObject {\n    constructor(level) {\n        super(level);\n        this.ensureIsValidLevel();\n    }\n    ensureIsValidLevel() {\n        if (this.value < 0 || this.value > 10000) {\n            throw RangeError(\"The equidistance must be between 0 and 10000\");\n        }\n    }\n}\n","export default class TIFFWaterRiseXMLGenerator {\n    generate(mdeLayerFullname, rectangle, level, areaBackgroundColor, areaOpacity) {\n        return `<wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n    <ows:Identifier>ras:RangeLookup</ows:Identifier>\n    <wps:DataInputs>\n      <wps:Input>\n        <ows:Identifier>coverage</ows:Identifier>\n        <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n          <wps:Body>\n            \n              <wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n                  <ows:Identifier>ras:CropCoverage</ows:Identifier>\n                  <wps:DataInputs>\n                  <wps:Input>\n                      <ows:Identifier>coverage</ows:Identifier>\n                      <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wcs\" method=\"POST\">\n                      <wps:Body>\n                          <wcs:GetCoverage service=\"WCS\" version=\"1.1.1\">\n                          <ows:Identifier>${mdeLayerFullname}</ows:Identifier>\n                          <wcs:DomainSubset>\n                              <ows:BoundingBox crs=\"http://www.opengis.net/gml/srs/epsg.xml#4326\">\n                              <ows:LowerCorner>-74.000000946 -59.483427301014075</ows:LowerCorner>\n                              <ows:UpperCorner>-26.233442340289727 -21.666460109</ows:UpperCorner>\n                              </ows:BoundingBox>\n                          </wcs:DomainSubset>\n                          <wcs:Output format=\"image/tiff\"/>\n                          </wcs:GetCoverage>\n                      </wps:Body>\n                      </wps:Reference>\n                  </wps:Input>\n                  <wps:Input>\n                      <ows:Identifier>cropShape</ows:Identifier>\n                      <wps:Data>\n                      <wps:ComplexData mimeType=\"application/json\">\n                        <![CDATA[{\n                          \"geometry\": {\n                          \"type\": \"Polygon\",\n                          \"coordinates\": [ ${rectangle} ] }\n                        }]]></wps:ComplexData>\n                      </wps:Data>\n                  </wps:Input>\n                  </wps:DataInputs>\n                  <wps:ResponseForm>\n                  <wps:RawDataOutput mimeType=\"image/tiff\">\n                      <ows:Identifier>result</ows:Identifier>\n                  </wps:RawDataOutput>\n                  </wps:ResponseForm>\n              </wps:Execute>\n\n          </wps:Body>\n        </wps:Reference>\n      </wps:Input>\n      <wps:Input>\n        <ows:Identifier>ranges</ows:Identifier>\n        <wps:Data>\n          <wps:LiteralData>[-9999;${level}]</wps:LiteralData>\n        </wps:Data>\n      </wps:Input><wps:Input>\n      <ows:Identifier>outputPixelValues</ows:Identifier>\n      <wps:Data>\n        <wps:LiteralData>127</wps:LiteralData>\n      </wps:Data>\n    </wps:Input>\n    <wps:Input>\n      <ows:Identifier>noData</ows:Identifier>\n      <wps:Data>\n        <wps:LiteralData>0</wps:LiteralData>\n      </wps:Data>\n    </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n      <wps:RawDataOutput mimeType=\"image/tiff\">\n        <ows:Identifier>reclassified</ows:Identifier>\n      </wps:RawDataOutput>\n    </wps:ResponseForm>\n  </wps:Execute>`;\n    }\n}\n","import TIFFWaterRiseXMLGenerator from \"./TIFFWaterRiseXMLGenerator\";\nexport default class PNGWaterRiseXMLGenerator {\n    generate(mdeLayerFullname, rectangle, level, areaBackgroundColor, areaOpacity) {\n        const tiffXmlGenerator = new TIFFWaterRiseXMLGenerator();\n        return `<wps:Execute version=\"1.0.0\" service=\"WPS\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.opengis.net/wps/1.0.0\" xmlns:wfs=\"http://www.opengis.net/wfs\" xmlns:wps=\"http://www.opengis.net/wps/1.0.0\" xmlns:ows=\"http://www.opengis.net/ows/1.1\" xmlns:gml=\"http://www.opengis.net/gml\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:wcs=\"http://www.opengis.net/wcs/1.1.1\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xsi:schemaLocation=\"http://www.opengis.net/wps/1.0.0 http://schemas.opengis.net/wps/1.0.0/wpsAll.xsd\">\n    <ows:Identifier>ras:StyleCoverage</ows:Identifier>\n    <wps:DataInputs>\n        <wps:Input>\n            <ows:Identifier>coverage</ows:Identifier>\n            <wps:Reference mimeType=\"image/tiff\" xlink:href=\"http://geoserver/wps\" method=\"POST\">\n                <wps:Body>\n                    ${tiffXmlGenerator.generate(mdeLayerFullname, rectangle, level, areaBackgroundColor, areaOpacity)}\n                </wps:Body>\n            </wps:Reference>\n        </wps:Input>\n        <wps:Input>\n            <ows:Identifier>style</ows:Identifier>\n            <wps:Data>\n                <wps:ComplexData mimeType=\"text/xml; subtype=sld/1.0.0\"><![CDATA[\n                    <StyledLayerDescriptor version=\"1.0.0\" xmlns=\"http://www.opengis.net/sld\" xmlns:ogc=\"http://www.opengis.net/ogc\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd\">\n                        <NamedLayer>\n                            <Name>leafout</Name>\n                            <UserStyle>\n                                <Name>leafout</Name>\n                                <Title>Day leaf index  reached</Title>\n                                <FeatureTypeStyle>\n                                    <Rule>\n                                        <RasterSymbolizer>\n                                            <Opacity>1.0</Opacity>\n                                            <ColorMap>\n                                                <ColorMapEntry color=\"#00FF00\" quantity=\"0\" opacity=\"0.0\" />\n                                                <ColorMapEntry color=\"${areaBackgroundColor}\" quantity=\"127\" opacity=\"${areaOpacity}\" />\n                                            </ColorMap>\n                                        </RasterSymbolizer>\n                                    </Rule>\n                                </FeatureTypeStyle>\n                            </UserStyle>\n                        </NamedLayer>\n                    </StyledLayerDescriptor>\n                    ]]>\n                </wps:ComplexData>\n            </wps:Data>\n        </wps:Input>\n    </wps:DataInputs>\n    <wps:ResponseForm>\n        <wps:RawDataOutput mimeType=\"image/png\">\n        <ows:Identifier>result</ows:Identifier>\n        </wps:RawDataOutput>\n    </wps:ResponseForm>\n</wps:Execute>`;\n    }\n}\n","import PNGWaterRiseXMLGenerator from \"./PNGWaterRiseXMLGenerator\";\nimport TIFFWaterRiseXMLGenerator from \"./TIFFWaterRiseXMLGenerator\";\nexport default class WaterRise {\n    constructor(polygon, level, wpsEndpoint, mdeLayerFullname, outputFormat, areaBackgroundColor, areaOpacity) {\n        this.ensureValidOutputFormat(outputFormat);\n        this.areaValidOpacity(areaOpacity);\n        this._polygon = polygon;\n        this._level = level;\n        this._wpsEndpoint = wpsEndpoint;\n        this._mdeLayerFullname = mdeLayerFullname;\n        this._outputFormat = outputFormat;\n        switch (this._outputFormat) {\n            case \"image/png\":\n                this._xmlGenerator = new PNGWaterRiseXMLGenerator();\n                break;\n            default:\n                this._xmlGenerator = new TIFFWaterRiseXMLGenerator();\n                break;\n        }\n        this._areaBackgoundColor = areaBackgroundColor;\n        this._areaOpacity = areaOpacity;\n    }\n    ensureValidOutputFormat(outputFormat) {\n        const validFormats = [\n            \"image/png\",\n            \"image/jpeg\",\n            \"image/tiff\",\n        ];\n        if (!validFormats.includes(outputFormat)) {\n            throw RangeError(\"Invalid output format\");\n        }\n    }\n    areaValidOpacity(areaOpacity) {\n        if (areaOpacity < 0 || areaOpacity > 1) {\n            throw RangeError(\"Invalid area opacity. This value must be between 0 and 1.\");\n        }\n    }\n    get polygon() {\n        return this._polygon;\n    }\n    get level() {\n        return this._level;\n    }\n    get wpsEndpoint() {\n        return this._wpsEndpoint;\n    }\n    rectangle() {\n        return this._polygon.toString();\n    }\n    get fullWpsEndpoint() {\n        return `${this.wpsEndpoint.value}&request=Execute&identifier=ras:RangeLookup`;\n    }\n    get xmlInput() {\n        return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    ${this._xmlGenerator.generate(this._mdeLayerFullname.value, this.rectangle(), this._level.value, this._areaBackgoundColor, this._areaOpacity)}`;\n    }\n}\nWaterRise.MAX_AREA_ALLOWED = 100000000;\nWaterRise.FIELDS = JSON.parse(`[\n      {\n        \"name\": \"Capa\",\n        \"element\": \"select\",\n        \"references\": \"drawedLayers\",\n        \"allowedTypes\": [\"rectangle\"],\n        \"points\": [\"ne\", \"sw\"]\n      },\n      {\n        \"name\": \"Cota\",\n        \"element\": \"input\",\n        \"type\": \"number\",\n        \"min\": 0,\n        \"max\": 10000\n      }\n    ]`);\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport area from \"@turf/area\";\nimport { polygon } from \"@turf/helpers\";\nimport { injectable } from \"tsyringe\";\nimport WaterRise from \"../domain/WaterRise\";\nlet WaterRiseTurfJSToleranceChecker = class WaterRiseTurfJSToleranceChecker {\n    ensureInputDataIsInTolerance(waterRise) {\n        const inputPolygon = this.pointsToPolygon(waterRise.polygon);\n        if (area(inputPolygon) > WaterRise.MAX_AREA_ALLOWED) {\n            throw RangeError(\"The area requested must be less than 100km2\");\n        }\n    }\n    pointsToPolygon(_polygon) {\n        const x = polygon(_polygon.coordinates());\n        return x;\n    }\n};\nWaterRiseTurfJSToleranceChecker = __decorate([\n    injectable()\n], WaterRiseTurfJSToleranceChecker);\nexport default WaterRiseTurfJSToleranceChecker;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { inject, injectable } from \"tsyringe\";\nimport WaterRise from \"../domain/WaterRise\";\nlet WaterRiseService = class WaterRiseService {\n    constructor(postman, toleranceChecker) {\n        this.postman = postman;\n        this.tolaranceChecker = toleranceChecker;\n    }\n    getFields() {\n        return WaterRise.FIELDS;\n    }\n    execute(waterRise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ensureInputDataIsInTolerance(waterRise);\n            return yield this.postman.postReturningBlob(waterRise.fullWpsEndpoint, waterRise.xmlInput);\n        });\n    }\n    ensureInputDataIsInTolerance(waterRise) {\n        this.tolaranceChecker.ensureInputDataIsInTolerance(waterRise);\n    }\n};\nWaterRiseService = __decorate([\n    injectable(),\n    __param(0, inject(\"Postman\")),\n    __param(1, inject(\"WaterRiseToleranceChecker\"))\n], WaterRiseService);\nexport default WaterRiseService;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport \"reflect-metadata\";\nimport { container } from \"tsyringe\";\nimport LayerFullname from \"../../Shared/domain/LayerFullname\";\nimport Level from \"../../Shared/domain/Level\";\nimport Polygon from \"../../Shared/domain/Polygon\";\nimport wpsEndpoint from \"../../Shared/domain/WPSEndpoint\";\nimport PostmanHTTP from \"../../Shared/infrastructure/PostmanHTTP\";\nimport WaterRise from \"../domain/WaterRise\";\nimport WaterRiseTurfJSToleranceChecker from \"../infraestructure/WaterRiseTurfJSToleranceChecker\";\nimport WaterRiseService from \"./WaterRiseService\";\ncontainer.register(\"Postman\", {\n    useClass: PostmanHTTP,\n});\ncontainer.register(\"WaterRiseToleranceChecker\", {\n    useClass: WaterRiseTurfJSToleranceChecker,\n});\nexport default class WaterRiseHandler {\n    constructor(host, mdeLayerFullname, service) {\n        this.host = host;\n        this.mdeLayerFullname = mdeLayerFullname;\n        if (service) {\n            this.service = service;\n        }\n        else {\n            this.service = container.resolve(WaterRiseService);\n        }\n    }\n    getFields() {\n        return this.service.getFields();\n    }\n    execute(polygon, level, outputFormat = \"image/png\", areaBackgroundColor = \"#FF0000\", areaOpacity = 1.0) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const waterRise = new WaterRise(Polygon.createFromString(polygon), new Level(level), new wpsEndpoint(this.host), new LayerFullname(this.mdeLayerFullname), outputFormat, areaBackgroundColor, areaOpacity);\n            return this.service.execute(waterRise);\n        });\n    }\n}\n"],"sourceRoot":""}